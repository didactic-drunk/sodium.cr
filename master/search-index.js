crystal_doc_search_index_callback({"repository_name":"sodium","body":"# sodium.cr\n[![Crystal CI](https://github.com/didactic-drunk/sodium.cr/actions/workflows/crystal.yml/badge.svg)](https://github.com/didactic-drunk/sodium.cr/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/didactic-drunk/sodium.cr.svg)](https://github.com/didactic-drunk/sodium.cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://didactic-drunk.github.io/sodium.cr/master)\n\nCrystal bindings for the [libsodium API](https://libsodium.gitbook.io/doc/)\n\n## Goals\n\n* Provide the most commonly used libsodium API's.\n* Provide an easy to use API based on reviewing most other [libsodium bindings](https://libsodium.gitbook.io/doc/bindings_for_other_languages).\n* Test for compatibility against other libsodium bindings to ensure interoperability.\n* Always provide a stream interface to handle arbitrarily sized data when one is available.\n* Drop in replacement classes compatible with OpenSSL::{Digest,Cipher} when possible.\n* Use the newest system packaged libsodium or download the most recent stable version without manual configuration.\n\n## Features\n\n- [Public-Key Cryptography](https://libsodium.gitbook.io/doc/public-key_cryptography)\n  - [x] ☑ [Crypto Box Easy](https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption)\n  - [x] [Sealed Box](https://libsodium.gitbook.io/doc/public-key_cryptography/sealed_boxes)\n  - [ ] [Combined Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n  - [x] ☑ [Detached Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n  - [ ] [Pre-hashed Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n- [Secret-Key Cryptography](https://libsodium.gitbook.io/doc/secret-key_cryptography)\n  - Secret Box\n    - [x] ☑ [Combined mode](https://libsodium.gitbook.io/doc/secret-key_cryptography/authenticated_encryption)\n    - [ ] [Detached mode](https://libsodium.gitbook.io/doc/secret-key_cryptography/authenticated_encryption)\n  - [x] [Secret Stream](https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream)\n  - [AEAD](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead)\n   - [ ] AES256-GCM (Requires hardware acceleration)\n   - [x] ☑ [XChaCha20-Poly1305-IETF](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n   - [ ] [ChaCha20-Poly1305-IETF](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead/chacha20-poly1305/ietf_chacha20-poly1305_construction)\n   - [ ] [ChaCha20-Poly1305](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead/chacha20-poly1305)\n   - [x] Combined and detached mode\n- [Hashing](https://libsodium.gitbook.io/doc/hashing)\n  - [x] ☑ [Blake2b](https://libsodium.gitbook.io/doc/hashing/generic_hashing)\n    - [x] Complete libsodium implementation including `key`, `salt`, `personal` and fully selectable output sizes.\n  - [ ] [SipHash](https://libsodium.gitbook.io/doc/hashing/short-input_hashing)\n- [Password Hashing](https://libsodium.gitbook.io/doc/password_hashing)\n  - [x] ☑ [Argon2](https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function) (Use for new applications)\n  - [ ] [Scrypt](https://libsodium.gitbook.io/doc/advanced/scrypt) (For compatibility with older applications)\n- Other\n  - [x] [Key Derivation](https://libsodium.gitbook.io/doc/key_derivation)\n  - [ ] [Key Exchange](https://libsodium.gitbook.io/doc/key_exchange)\n- [Advanced](https://libsodium.gitbook.io/doc/advanced)\n  - [Stream Ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers)\n    - [x] XSalsa20\n    - [x] Salsa20\n    - [x] XChaCha20\n    - [x] ChaCha20 Ietf\n    - [x] ChaCha20\n    - [x] Easy to use methods available for use as a CSPRNG that are faster and safer than Crystal's.  See `benchmarks/rand.out`.\n  - [ ] [One time auth](https://libsodium.gitbook.io/doc/advanced/poly1305)\n  - [ ] Padding\n- Library features\n  - [x] Faster builds by requiring what you need (`require \"sodium/secret_box\"`)\n  - [x] Nonce reuse detection.\n  - [x] All SecretKey's held in libsodium guarded memory.\n  - [x] No heap allocations after #initialize when possible.\n  - [x] Fast.  Benchmarks available in `benchmarks`.\n  - [x] [Most classes are safe to share between threads.](THREAD_SAFETY.md)\n    - [x] Tested with real crystal threads and will continue to work when crystal officially supports threading.\n  - [ ] Controlled memory wiping (by calling `.close`)\n\n☑ Indicate specs are compared against test vectors from another source.\n\nSeveral features in libsodium are already provided by Crystal:\n* Random (Use [Random::Secure](https://crystal-lang.org/api/latest/Random/Secure.html))\n* SHA-2 (Use [OpenSSL::Digest](https://crystal-lang.org/api/latest/OpenSSL/Digest.html))\n* HMAC SHA-2 (Use [OpenSSL::HMAC](https://crystal-lang.org/api/latest/OpenSSL/HMAC.html))\n* Hex conversion (Use [String#hexbytes](https://crystal-lang.org/api/latest/String.html#hexbytes%3ABytes-instance-method))\n\n\n## What should I use for my application?\n\n| Class | |\n| --- | --- |\n| Only use `CryptoBox::SecretKey` `Sign::SecretKey` `Aead::XChaCha20Poly1305Ietf` `SecretBox` | I don't know much about crypto. |\n| [`Sodium::CryptoBox::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/CryptoBox/SecretKey.html) .box | I want to encrypt + authenticate data using public key encryption. |\n| [`Sodium::CryptoBox::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/CryptoBox/PublicKey.html) .encrypt | I want anonymously send encrypted data. (No signatures) |\n| [`Sodium::Sign::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/Sign/SecretKey.html) | I want to sign or verify messages. (No encryption) |\n| [`Sodium::Cipher::Aead::XChaCha20Poly1305Ietf` (new applications) `Sodium::SecretBox` (compatibility with older applications)](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/Aead/XChaCha20Poly1305Ietf.html) | I have a shared key and want to encrypt + authenticate data. |\n| [`Sodium::Cipher::Aead::XChaCha20Poly1305Ietf`](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/Aead/XChaCha20Poly1305Ietf.html) | I have a shared key and want to encrypt + authenticate data and authenticate additional plaintext data. |\n| [`Sodium::Cipher::SecretStream`](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/SecretStream/XChaCha20Poly1305.html) | I have a shared key and want encrypt + authenticate streamed data. |\n| [`Sodium::Digest::Blake2b`](https://didactic-drunk.github.io/sodium.cr/Sodium/Digest/Blake2b.html) | I want to hash data fast and securely. |\n| `Sodium::Digest::SipHash` | I want to hash data really fast and less securely. (Not implemented yet) |\n| [`Sodium::Password::Hash`](https://didactic-drunk.github.io/sodium.cr/Sodium/Password/Hash.html) | I want to hash a password and store it. |\n| [`Sodium::Password::Key`](https://didactic-drunk.github.io/sodium.cr/Sodium/Password/Key.html) | I want to derive a key from a password. |\n| [`Sodium::Kdf`](https://didactic-drunk.github.io/sodium.cr/Sodium/Kdf.html) | I have a high quality master key and want to make subkeys. |\n| [`Sodium::Cipher::Chalsa`](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/Chalsa.html) | What goes with guacamole? |\n| Everything else | I want to design my own crypto protocol and probably do it wrong. |\n\n\n## Installation\n\n**[Optionally Install libsodium.](https://download.libsodium.org/doc/installation/)**\nA recent version of libsodium is automatically downloaded and compiled if you don't install your own version.\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  sodium:\n    github: didactic-drunk/sodium.cr\n```\n\n\n## Usage\n\nSee `examples` for help on using these classes in a complete application.\n\nThe `specs` provide the best examples of how to use or misuse individual classes.\n```\n\n### CryptoBox authenticated easy encryption\n```crystal\nrequire \"sodium\"\n\ndata = \"Hello World!\"\n\n# Alice is the sender\nalice = Sodium::CryptoBox::SecretKey.new\n\n# Bob is the recipient\nbob = Sodium::CryptoBox::SecretKey.new\n\n# Precompute a shared secret between alice and bob.\nbox = alice.box bob.public_key\n\n# Encrypt a message for Bob using his public key, signing it with Alice's\n# secret key\nencrypted, nonce = box.encrypt data\n\n# Precompute within a block.  The shared secret is wiped when the block exits.\nbob.box alice.public_key do |box|\n  # Decrypt the message using Bob's secret key, and verify its signature against\n  # Alice's public key\n  decrypted = box.decrypt encrypted, nonce: nonce\n\n  String.new(decrypted) # => \"Hello World!\"\nend\n```\n\n### Unauthenticated public key encryption\n```crystal\ndata = \"Hello World!\"\n\n# Bob is the recipient\nbob = Sodium::CryptoBox::SecretKey.new\n\n# Encrypt a message for Bob using his public key\nencrypted = bob.public_key.encrypt data\n\n# Decrypt the message using Bob's secret key\ndecrypted = bob.decrypt encrypted\nString.new(decrypted) # => \"Hello World!\"\n```\n\n### Public key signing\n```crystal\nmessage = \"Hello World!\"\n\nsecret_key = Sodium::Sign::SecretKey.new\n\n# Sign the message\nsignature = secret_key.sign_detached message\n\n# Send secret_key.public_key to the recipient\n\n# On the recipient\npublic_key = Sodium::Sign::PublicKey.new key_bytes\n\n# raises Sodium::Error::VerificationFailed on failure.\npublic_key.verify_detached message, signature\n```\n\n### Secret Key Encryption\n```crystal\nbox = Sodium::SecretBox.new\n\nmessage = \"foobar\"\nencrypted, nonce = box.encrypt message\n\n# On the other side.\nbox = Sodium::SecretKey.new key\nmessage = box.decrypt encrypted, nonce: nonce\n```\n\n### Blake2b\n```crystal\nkey = Bytes.new Sodium::Digest::Blake2B::KEY_SIZE\nsalt = Bytes.new Sodium::Digest::Blake2B::SALT_SIZE\npersonal = Bytes.new Sodium::Digest::Blake2B::PERSONAL_SIZE\nout_size = 64 # bytes between Sodium::Digest::Blake2B::OUT_SIZE_MIN and Sodium::Digest::Blake2B::OUT_SIZE_MAX\ndata = \"data\".to_slice\n\n# output_size, key, salt, and personal are optional.\ndigest = Sodium::Digest::Blake2b.new out_size, key: key, salt: salt, personal: personal\ndigest.update data\noutput = d.hexfinal\n\ndigest.reset # Reuse existing object to hash again.\ndigest.update data\noutput = d.hexfinal\n```\n\n### Key derivation\n```crystal\nkdf = Sodium::Kdf.new\n\n# kdf.derive(8_byte_context, subkey_id, subkey_size)\nsubkey1 = kdf.derive \"context1\", 0, 16\nsubkey2 = kdf.derive \"context1\", 1, 16\nsubkey3 = kdf.derive \"context2\", 0, 32\nsubkey4 = kdf.derive \"context2\", 1, 64\n```\n\n### Password based keys\n```crystal\npwcreate = Sodium::Password::Key::Create.new\n\n# Take approximately 1 second to derive a key.\npwcreate.tcost = 1.0\n\npass = \"1234\"\nkey, params = pwcreate.create_key pass\n# Store `params` or `params.to_h` for later.\n\n# Derive the same key from the stored params.\npwkey = Sodium::Password::Key.from_params params.to_h\nkey = pekey.derive_key pass\n```\n\n### Password Hashing\n```crystal\npwhash = Sodium::Password::Hash.new\n\npwhash.mem = Sodium::Password::MEMLIMIT_MIN\npwhash.ops = Sodium::Password::OPSLIMIT_MIN\n\npass = \"1234\"\nhash = pwhash.create pass\npwhash.verify hash, pass\n```\n\nUse `examples/pwhash_selector.cr` to help choose ops/mem limits.\n\n\nExample output:\nOps limit →\n\n|          |       1 |       4 |      16 |      64 |     256 |    1024 |    4096 |   16384 |   65536 |  262144 | 1048576 |\n| -------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- |\n|       8K |         |         |         |         |         |         |         |         |         |  0.542s |  2.114s |\n|      32K |         |         |         |         |         |         |         |         |  0.513s |  2.069s |\n|     128K |         |         |         |         |         |         |         |  0.530s |  2.121s |\n|     512K |         |         |         |         |         |         |  0.566s |  2.237s |\n|    2048K |         |         |         |         |         |  0.567s |  2.290s |\n|    8192K |         |         |         |         |  0.670s |  2.542s |\n|   32768K |         |         |         |  0.684s |  2.777s |\n|  131072K |         |         |  0.805s |  3.106s |\n|  524288K |  0.504s |  1.135s |  3.661s |\n| 2097152K |  2.119s |\n|   Memory |\n\n\n\n## Contributing\n\n1. Fork it ( https://github.com/didactic-drunk/sodium.cr/fork )\n2. **Install a formatting check git hook (ln -sf ../../scripts/git/pre-commit .git/hooks)**\n3. Create your feature branch (git checkout -b my-new-feature)\n4. Commit your changes (git commit -am 'Add some feature')\n5. Push to the branch (git push origin my-new-feature)\n6. Create a new Pull Request\n\n## Project History\n\n* Originally created by [Andrew Hamon](https://github.com/andrewhamons/cox)\n* Forked by [Didactic Drunk](https://github.com/didactic-drunk/cox) for lack of updates in the original project.\n* Complaints about the name being too controversial.  Project name changed from \"cox\" to a more libsodium related name of \"salty seaman\".\n* ~50% complete libsodium API.\n* More complaints about the name.  Dead hooker jokes added.\n* None of the original API is left.\n* More complaints threatening a boycott.  Told them \"Go ahead, I own Coca Cola and Water\".\n* Account unsuspended.\n* Unrelated to the boycott the project name changed to \"libsodium\" because sodium happens to be a tasty byproduct of the two earlier names.\n* Account unsuspended.\n* Dead hooker jokes (mostly) removed.\n\n## Contributors\n\n- [andrewhamon](https://github.com/andrewhamon) Andrew Hamon - creator, former maintainer\n- [dorkrawk](https://github.com/dorkrawk) Dave Schwantes - contributor\n- [didactic-drunk](https://github.com/didactic-drunk) - current maintainer\n","program":{"html_id":"sodium/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"sodium","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"delegate_to_slice(toobject)-macro","html_id":"delegate_to_slice(toobject)-macro","name":"delegate_to_slice","doc":null,"summary":null,"abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(to object)","location":{"filename":"src/sodium/lib_sodium.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L5"},"def":{"name":"delegate_to_slice","args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  def to_slice() : Bytes\n    \n{{ object.id }}\n.to_slice\n  \nend\n\n"}}],"types":[{"html_id":"sodium/Sodium","path":"Sodium.html","kind":"module","full_name":"Sodium","name":"Sodium","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium.cr","line_number":1,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium.cr#L1"},{"filename":"src/sodium/crypto_box.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L6"},{"filename":"src/sodium/error.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/error.cr#L3"},{"filename":"src/sodium/kdf.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L5"},{"filename":"src/sodium/key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/key.cr#L4"},{"filename":"src/sodium/lib_sodium.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L11"},{"filename":"src/sodium/lib_sodium.cr","line_number":434,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L434"},{"filename":"src/sodium/nonce.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L4"},{"filename":"src/sodium/secret_box.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L5"},{"filename":"src/sodium/secure_buffer.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L4"},{"filename":"src/sodium/sign/public_key.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L3"},{"filename":"src/sodium/sign/secret_key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L5"},{"filename":"src/sodium/version.cr","line_number":1,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/version.cr#L1"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.2.3\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"memcmp(a:Bytes,b:Bytes):Bool-class-method","html_id":"memcmp(a:Bytes,b:Bytes):Bool-class-method","name":"memcmp","doc":"Constant time memory compare.","summary":"<p>Constant time memory compare.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Bytes"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(a : Bytes, b : Bytes) : Bool","args_html":"(a : Bytes, b : Bytes) : Bool","location":{"filename":"src/sodium/lib_sodium.cr","line_number":436,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L436"},"def":{"name":"memcmp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Bytes"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if a.bytesize != b.bytesize\n  false\nelse\n  if (LibSodium.sodium_memcmp(a, b, a.bytesize)) == 0\n    true\n  else\n    false\n  end\nend"}},{"id":"memcmp!(a,b)-class-method","html_id":"memcmp!(a,b)-class-method","name":"memcmp!","doc":"Constant time memory compare.  Raises unless comparison succeeds.","summary":"<p>Constant time memory compare.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/sodium/lib_sodium.cr","line_number":447,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L447"},"def":{"name":"memcmp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if memcmp(a, b)\nelse\n  raise(Error::MemcmpFailed.new)\nend\ntrue\n"}},{"id":"memzero(bytes:Bytes):Nil-class-method","html_id":"memzero(bytes:Bytes):Nil-class-method","name":"memzero","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Nil","args_html":"(bytes : Bytes) : Nil","location":{"filename":"src/sodium/lib_sodium.cr","line_number":452,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L452"},"def":{"name":"memzero","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"LibSodium.sodium_memzero(bytes, bytes.bytesize)"}},{"id":"memzero(str:String):Nil-class-method","html_id":"memzero(str:String):Nil-class-method","name":"memzero","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String) : Nil","args_html":"(str : String) : Nil","location":{"filename":"src/sodium/lib_sodium.cr","line_number":456,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/lib_sodium.cr#L456"},"def":{"name":"memzero","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"memzero(str.to_slice)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Cipher","path":"Sodium/Cipher.html","kind":"module","full_name":"Sodium::Cipher","name":"Cipher","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L4"},{"filename":"src/sodium/cipher/cipher.cr","line_number":2,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/cipher.cr#L2"},{"filename":"src/sodium/cipher/secret_stream.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L4"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Use Sodium::Cipher::SecretStream::XChaCha20Poly1305 or SecretBox","summary":"<p>Use Sodium::Cipher::SecretStream::XChaCha20Poly1305 or SecretBox</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Cipher/Aead","path":"Sodium/Cipher/Aead.html","kind":"module","full_name":"Sodium::Cipher::Aead","name":"Aead","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Cipher/Aead/Chalsa","path":"Sodium/Cipher/Aead/Chalsa.html","kind":"class","full_name":"Sodium::Cipher::Aead::Chalsa","name":"Chalsa","abstract":true,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L6"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Cipher/Aead/XChaCha20Poly1305Ietf","kind":"class","full_name":"Sodium::Cipher::Aead::XChaCha20Poly1305Ietf","name":"XChaCha20Poly1305Ietf"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher/Aead","kind":"module","full_name":"Sodium::Cipher::Aead","name":"Aead"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(key:SecureBuffer)-class-method","html_id":"new(key:SecureBuffer)-class-method","name":"new","doc":"Initializes with a reference to an existing ky.","summary":"<p>Initializes with a reference to an existing ky.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"SecureBuffer"}],"args_string":"(key : SecureBuffer)","args_html":"(key : <a href=\"../../../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L16"},"def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Initializes copying the key to a `SecureBuffer`.","summary":"<p>Initializes copying the key to a <code><a href=\"../../../Sodium/SecureBuffer.html\">SecureBuffer</a></code>.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":22,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L22"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes with a new random key.","summary":"<p>Initializes with a new random key.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L11"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"decrypt(src,dst:Bytes?=nil,*,nonce:Nonce,additional=nil):Bytes-instance-method","html_id":"decrypt(src,dst:Bytes?=nil,*,nonce:Nonce,additional=nil):Bytes-instance-method","name":"decrypt","doc":"Decrypts `src` and returns plaintext\nMust supply `nonce`\nMust supply `additional` if supplied to #encrypt","summary":"<p>Decrypts <code>src</code> and returns plaintext Must supply <code>nonce</code> Must supply <code>additional</code> if supplied to #encrypt</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Nonce, additional = <span class=\"n\">nil</span>) : Bytes","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../../../Sodium/Nonce.html\">Nonce</a>, additional = <span class=\"n\">nil</span>) : Bytes","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":40,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L40"},"def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"src = src.to_slice\noffset = src.bytesize - mac_size\nmac = src[offset, mac_size]\ndecrypt_detached(src[0, offset], dst, nonce: nonce, mac: mac, additional: additional)\n"}},{"id":"decrypt_detached(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):Bytes-instance-method","html_id":"decrypt_detached(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):Bytes-instance-method","name":"decrypt_detached","doc":"Decrypts `src` and returns plaintext\nMust supply `mac` and `nonce`\nMust supply `additional` if supplied to #encrypt","summary":"<p>Decrypts <code>src</code> and returns plaintext Must supply <code>mac</code> and <code>nonce</code> Must supply <code>additional</code> if supplied to #encrypt</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : Bytes","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : Bytes","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":65,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L65"},"def":{"name":"decrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"decrypt_detached(src.to_slice, mac: mac, nonce: nonce, additional: additional)"}},{"id":"decrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce,mac:Bytes,additional:String|Bytes|Nil=nil):Bytes-instance-method","html_id":"decrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce,mac:Bytes,additional:String|Bytes|Nil=nil):Bytes-instance-method","name":"decrypt_detached","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Sodium::Nonce"},{"name":"mac","doc":null,"default_value":"","external_name":"mac","restriction":"Bytes"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"args_string":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Sodium::Nonce, mac : Bytes, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Bytes","args_html":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>, mac : Bytes, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Bytes","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":79,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L79"},"def":{"name":"decrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Sodium::Nonce"},{"name":"mac","doc":null,"default_value":"","external_name":"mac","restriction":"Bytes"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}},{"id":"decrypt_detached_string(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):String-instance-method","html_id":"decrypt_detached_string(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):String-instance-method","name":"decrypt_detached_string","doc":"Decrypts `src` and returns plaintext\nMust supply `mac` and `nonce`\nMust supply `additional` if supplied to #encrypt","summary":"<p>Decrypts <code>src</code> and returns plaintext Must supply <code>mac</code> and <code>nonce</code> Must supply <code>additional</code> if supplied to #encrypt</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : String","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : String","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":72,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L72"},"def":{"name":"decrypt_detached_string","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"buf = decrypt_detached(src.to_slice, dst, mac: mac, nonce: nonce, additional: additional)\nString.new(buf)\n"}},{"id":"decrypt_string(src,dst:Bytes?=nil,*,nonce:Nonce,additional=nil):String-instance-method","html_id":"decrypt_string(src,dst:Bytes?=nil,*,nonce:Nonce,additional=nil):String-instance-method","name":"decrypt_string","doc":"Decrypts `src` and returns plaintext\nMust supply `nonce`\nMust supply `additional` if supplied to #encrypt","summary":"<p>Decrypts <code>src</code> and returns plaintext Must supply <code>nonce</code> Must supply <code>additional</code> if supplied to #encrypt</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Nonce, additional = <span class=\"n\">nil</span>) : String","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../../../Sodium/Nonce.html\">Nonce</a>, additional = <span class=\"n\">nil</span>) : String","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":51,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L51"},"def":{"name":"decrypt_string","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"buf = decrypt(src, dst, nonce: nonce, additional: additional)\nString.new(buf)\n"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":83,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L83"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@key.dup)"}},{"id":"encrypt(src,dst:Bytes?=nil,*,nonce=nil,additional=nil)-instance-method","html_id":"encrypt(src,dst:Bytes?=nil,*,nonce=nil,additional=nil)-instance-method","name":"encrypt","doc":"Encrypts `src` and returns {ciphertext, nonce}","summary":"<p>Encrypts <code>src</code> and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>)","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":28,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L28"},"def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{Bytes, Nonce}\noffset = src.bytesize\ndst || (dst = Bytes.new((offset + mac_size)))\nmac = dst[offset, mac_size]\n_, _, nonce = encrypt_detached(src.to_slice, dst[0, offset], mac: mac, nonce: nonce, additional: additional)\n{dst, nonce}\n"}},{"id":"encrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce?=nil,mac:Bytes?=nil,additional:String|Bytes|Nil=nil):Tuple(Bytes,Bytes,Sodium::Nonce)-instance-method","html_id":"encrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce?=nil,mac:Bytes?=nil,additional:String|Bytes|Nil=nil):Tuple(Bytes,Bytes,Sodium::Nonce)-instance-method","name":"encrypt_detached","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Sodium::Nonce | ::Nil"},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"args_string":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Sodium::Nonce? = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, Sodium::Nonce)","args_html":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>? = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L78"},"def":{"name":"encrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Sodium::Nonce | ::Nil"},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Bytes, Sodium::Nonce)","visibility":"Public","body":""}},{"id":"encrypt_detached(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):Tuple(Bytes,Bytes,Nonce)-instance-method","html_id":"encrypt_detached(src,dst:Bytes?=nil,*,nonce=nil,mac:Bytes?=nil,additional=nil):Tuple(Bytes,Bytes,Nonce)-instance-method","name":"encrypt_detached","doc":"Encrypts `src` and returns {mac, ciphertext, nonce}","summary":"<p>Encrypts <code>src</code> and returns {mac, ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, Nonce)","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce = <span class=\"n\">nil</span>, mac : Bytes? = <span class=\"n\">nil</span>, additional = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, <a href=\"../../../Sodium/Nonce.html\">Nonce</a>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":58,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L58"},"def":{"name":"encrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Bytes, Nonce)","visibility":"Public","body":"encrypt_detached(src.to_slice, mac: mac, nonce: nonce, additional: additional)"}},{"id":"key:SecureBuffer-instance-method","html_id":"key:SecureBuffer-instance-method","name":"key","doc":"Encryption key","summary":"<p>Encryption key</p>","abstract":false,"args":[],"args_string":" : SecureBuffer","args_html":" : <a href=\"../../../Sodium/SecureBuffer.html\">SecureBuffer</a>","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L8"},"def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"@key"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/Aead/XChaCha20Poly1305Ietf","path":"Sodium/Cipher/Aead/XChaCha20Poly1305Ietf.html","kind":"class","full_name":"Sodium::Cipher::Aead::XChaCha20Poly1305Ietf","name":"XChaCha20Poly1305Ietf","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Aead/Chalsa","kind":"class","full_name":"Sodium::Cipher::Aead::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Aead/Chalsa","kind":"class","full_name":"Sodium::Cipher::Aead::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_aead_xchacha20poly1305_ietf_keybytes.to_i32","doc":null,"summary":null},{"id":"MAC_SIZE","name":"MAC_SIZE","value":"LibSodium.crypto_aead_xchacha20poly1305_ietf_abytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_aead_xchacha20poly1305_ietf_npubbytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher/Aead","kind":"module","full_name":"Sodium::Cipher::Aead","name":"Aead"},"doc":"Use like `SecretBox` with optional additional authenticated data.\n\nSee [https://libsodium.gitbook.io/doc/secret-key_cryptography/aead](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead)\n\nSee `spec/sodium/cipher/aead/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>Use like <code><a href=\"../../../Sodium/SecretBox.html\">SecretBox</a></code> with optional additional authenticated data.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"decrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce,mac:Bytes,additional:String|Bytes|Nil=nil):Bytes-instance-method","html_id":"decrypt_detached(src:Bytes,dst:Bytes?=nil,*,nonce:Sodium::Nonce,mac:Bytes,additional:String|Bytes|Nil=nil):Bytes-instance-method","name":"decrypt_detached","doc":"`src` and `dst` may be the same object but should not overlap.\nMust supply `mac` and `nonce`\nMust supply `additional` if supplied to #encrypt_detached","summary":"<p><code>src</code> and <code>dst</code> may be the same object but should not overlap.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Sodium::Nonce"},{"name":"mac","doc":null,"default_value":"","external_name":"mac","restriction":"Bytes"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"args_string":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Sodium::Nonce, mac : Bytes, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Bytes","args_html":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>, mac : Bytes, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Bytes","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L88"},"def":{"name":"decrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Sodium::Nonce"},{"name":"mac","doc":null,"default_value":"","external_name":"mac","restriction":"Bytes"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"dst || (dst = Bytes.new(src.bytesize))\nif src.bytesize != dst.bytesize\n  raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\nend\nif nonce.bytesize == NONCE_SIZE\nelse\n  raise(ArgumentError.new(\"nonce size mismatch, got #{nonce.bytesize}, wanted #{NONCE_SIZE}\"))\nend\nif mac.bytesize == MAC_SIZE\nelse\n  raise(ArgumentError.new(\"mac size mismatch, got #{mac.bytesize}, wanted #{MAC_SIZE}\"))\nend\nad_len = additional.try(&.bytesize) || 0\nr = @key.readonly do\n  LibSodium.crypto_aead_xchacha20poly1305_ietf_decrypt_detached(dst, nil, src, src.bytesize, mac, additional, ad_len, nonce.to_slice, @key.to_slice)\nend\nif r != 0\n  raise(Sodium::Error::DecryptionFailed.new(\"crypto_aead__xchacha20poly1305_ietf_decrypt_detached\"))\nend\ndst\n"}},{"id":"encrypt_detached(src:Bytes,dst:Bytes?=nil,nonce:Sodium::Nonce?=nil,*,mac:Bytes?=nil,additional:String|Bytes|Nil=nil):Tuple(Bytes,Bytes,Sodium::Nonce)-instance-method","html_id":"encrypt_detached(src:Bytes,dst:Bytes?=nil,nonce:Sodium::Nonce?=nil,*,mac:Bytes?=nil,additional:String|Bytes|Nil=nil):Tuple(Bytes,Bytes,Sodium::Nonce)-instance-method","name":"encrypt_detached","doc":"`src` and `dst` may be the same object but should not overlap.\nMay supply `mac`, otherwise a new one is returned.\nMay supply `additional`","summary":"<p><code>src</code> and <code>dst</code> may be the same object but should not overlap.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Sodium::Nonce | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"args_string":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, nonce : Sodium::Nonce? = <span class=\"n\">nil</span>, *, mac : Bytes? = <span class=\"n\">nil</span>, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, Sodium::Nonce)","args_html":"(src : Bytes, dst : Bytes? = <span class=\"n\">nil</span>, nonce : <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>? = <span class=\"n\">nil</span>, *, mac : Bytes? = <span class=\"n\">nil</span>, additional : String | Bytes | Nil = <span class=\"n\">nil</span>) : Tuple(Bytes, Bytes, <a href=\"../../../Sodium/Nonce.html\">Sodium::Nonce</a>)","location":{"filename":"src/sodium/cipher/aead/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/aead/chalsa.cr#L88"},"def":{"name":"encrypt_detached","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Sodium::Nonce | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"mac","doc":null,"default_value":"nil","external_name":"mac","restriction":"Bytes | ::Nil"},{"name":"additional","doc":null,"default_value":"nil","external_name":"additional","restriction":"String | Bytes | Nil"}],"double_splat":null,"splat_index":3,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Bytes, Sodium::Nonce)","visibility":"Public","body":"dst || (dst = Bytes.new(src.bytesize))\nnonce || (nonce = Sodium::Nonce.random)\nmac || (mac = Bytes.new(MAC_SIZE))\nif src.bytesize != dst.bytesize\n  raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\nend\nif nonce.bytesize == NONCE_SIZE\nelse\n  raise(ArgumentError.new(\"nonce size mismatch, got #{nonce.bytesize}, wanted #{NONCE_SIZE}\"))\nend\nif mac.bytesize == MAC_SIZE\nelse\n  raise(ArgumentError.new(\"mac size mismatch, got #{mac.bytesize}, wanted #{MAC_SIZE}\"))\nend\nadditional = additional.try(&.to_slice)\nad_len = additional.try(&.bytesize) || 0\nnonce.used!\n@key.readonly do\n  r = LibSodium.crypto_aead_xchacha20poly1305_ietf_encrypt_detached(dst, mac, out mac_len, src, src.bytesize, additional, ad_len, nil, nonce.to_slice, @key.to_slice)\n  if r != 0\n    raise(Sodium::Error.new(\"crypto_aead__xchacha20poly1305_ietf_encrypt_detached\"))\n  end\n  if mac_len != MAC_SIZE\n    raise(Sodium::Error.new(\"crypto_aead__xchacha20poly1305_ietf_encrypt_detached mac size mismatch\"))\n  end\nend\n{mac, dst, nonce}\n"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Cipher/ChaCha20","path":"Sodium/Cipher/ChaCha20.html","kind":"class","full_name":"Sodium::Cipher::ChaCha20","name":"ChaCha20","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_stream_chacha20_keybytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_stream_chacha20_noncebytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"KEY_SIZE"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"NONCE_SIZE"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_chacha20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_chacha20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/ChaCha20Ietf","path":"Sodium/Cipher/ChaCha20Ietf.html","kind":"class","full_name":"Sodium::Cipher::ChaCha20Ietf","name":"ChaCha20Ietf","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"KEY_SIZE"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"NONCE_SIZE"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_chacha20_ietf_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_chacha20_ietf_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/Chalsa","path":"Sodium/Cipher/Chalsa.html","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa","abstract":true,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L8"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Cipher/ChaCha20","kind":"class","full_name":"Sodium::Cipher::ChaCha20","name":"ChaCha20"},{"html_id":"sodium/Sodium/Cipher/ChaCha20Ietf","kind":"class","full_name":"Sodium::Cipher::ChaCha20Ietf","name":"ChaCha20Ietf"},{"html_id":"sodium/Sodium/Cipher/Salsa20","kind":"class","full_name":"Sodium::Cipher::Salsa20","name":"Salsa20"},{"html_id":"sodium/Sodium/Cipher/XChaCha20","kind":"class","full_name":"Sodium::Cipher::XChaCha20","name":"XChaCha20"},{"html_id":"sodium/Sodium/Cipher/XSalsa20","kind":"class","full_name":"Sodium::Cipher::XSalsa20","name":"XSalsa20"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"The great beat you can eat!\n\nWhat? They're both dance?","summary":"<p>The great beat you can eat!</p>","class_methods":[],"constructors":[{"id":"new(key=nil,nonce=nil)-class-method","html_id":"new(key=nil,nonce=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""}],"args_string":"(key = <span class=\"n\">nil</span>, nonce = <span class=\"n\">nil</span>)","args_html":"(key = <span class=\"n\">nil</span>, nonce = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":21,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L21"},"def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key, nonce)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":83,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L83"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(key: @key.try(&.dup), nonce: @nonce.try(&.dup))"}},{"id":"edible?-instance-method","html_id":"edible?-instance-method","name":"edible?","doc":"Always returns false. Sadness...","summary":"<p>Always returns false.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":75,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L75"},"def":{"name":"edible?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"final-instance-method","html_id":"final-instance-method","name":"final","doc":"Provided for compatibility with block or tagged ciphers.\nStream ciphers don't have additional data.","summary":"<p>Provided for compatibility with block or tagged ciphers.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":55,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L55"},"def":{"name":"final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FINAL_BYTES"}},{"id":"key-instance-method","html_id":"key-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":15,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L15"},"def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @key).nil?\n  ::raise(NilAssertionError.new(\"Sodium::Cipher::Chalsa#key cannot be nil\"))\nelse\n  value\nend"}},{"id":"key=(key:Bytes|SecureBuffer)-instance-method","html_id":"key=(key:Bytes|SecureBuffer)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"args_string":"(key : Bytes | SecureBuffer)","args_html":"(key : Bytes | <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":26,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L26"},"def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key.bytesize != key_size\n  raise(ArgumentError.new(\"key must be #{key_size} bytes, got #{key.bytesize}\"))\nend\n@key = key\nkey\n"}},{"id":"key?:Slice(UInt8)|Sodium::SecureBuffer|Nil-instance-method","html_id":"key?:Slice(UInt8)|Sodium::SecureBuffer|Nil-instance-method","name":"key?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8) | Sodium::SecureBuffer | Nil","args_html":" : Slice(UInt8) | <a href=\"../../Sodium/SecureBuffer.html\">Sodium::SecureBuffer</a> | Nil","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":15,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L15"},"def":{"name":"key?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":80,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L80"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"nonce-instance-method","html_id":"nonce-instance-method","name":"nonce","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L16"},"def":{"name":"nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @nonce).nil?\n  ::raise(NilAssertionError.new(\"Sodium::Cipher::Chalsa#nonce cannot be nil\"))\nelse\n  value\nend"}},{"id":"nonce=(nonce:Bytes)-instance-method","html_id":"nonce=(nonce:Bytes)-instance-method","name":"nonce=","doc":null,"summary":null,"abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Bytes"}],"args_string":"(nonce : Bytes)","args_html":"(nonce : Bytes)","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":32,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L32"},"def":{"name":"nonce=","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if nonce.bytesize != nonce_size\n  raise(ArgumentError.new(\"nonce must be #{nonce_size} bytes, got #{nonce.bytesize}\"))\nend\n@nonce = nonce\nnonce\n"}},{"id":"nonce?:Slice(UInt8)?-instance-method","html_id":"nonce?:Slice(UInt8)?-instance-method","name":"nonce?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8)?","args_html":" : Slice(UInt8)?","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L16"},"def":{"name":"nonce?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nonce"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":81,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L81"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"offset:Int32-instance-method","html_id":"offset:Int32-instance-method","name":"offset","doc":"Advanced usage.  Don't touch.","summary":"<p>Advanced usage.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L13"},"def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset"}},{"id":"offset=(offset)-instance-method","html_id":"offset=(offset)-instance-method","name":"offset=","doc":"Advanced usage.  Don't touch.","summary":"<p>Advanced usage.</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(offset)","args_html":"(offset)","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L13"},"def":{"name":"offset=","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset"}},{"id":"random_bytes(bytes:Bytes):Bytes-instance-method","html_id":"random_bytes(bytes:Bytes):Bytes-instance-method","name":"random_bytes","doc":"Use as a CSPRNG.","summary":"<p>Use as a CSPRNG.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Bytes","args_html":"(bytes : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":60,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L60"},"def":{"name":"random_bytes","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"Sodium.memzero(bytes)\nupdate(bytes, bytes)\nbytes\n"}},{"id":"random_bytes(size:Int):Bytes-instance-method","html_id":"random_bytes(size:Int):Bytes-instance-method","name":"random_bytes","doc":"Use as a CSPRNG.","summary":"<p>Use as a CSPRNG.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int) : Bytes","args_html":"(size : Int) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":68,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L68"},"def":{"name":"random_bytes","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"bytes = Bytes.new(size)\nupdate(bytes, bytes)\nbytes\n"}},{"id":"random_key-instance-method","html_id":"random_key-instance-method","name":"random_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":38,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L38"},"def":{"name":"random_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.key = SecureBuffer.random(key_size)"}},{"id":"random_nonce-instance-method","html_id":"random_nonce-instance-method","name":"random_nonce","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":42,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L42"},"def":{"name":"random_nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nonce = Random::Secure.random_bytes(nonce_size)"}},{"id":"update(src:Bytes):Bytes-instance-method","html_id":"update(src:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and returns a new Slice","summary":"<p>Xor's src with the cipher output and returns a new Slice</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"args_string":"(src : Bytes) : Bytes","args_html":"(src : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":47,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L47"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"update(src, Bytes.new(src.bytesize))"}},{"id":"update(src:Bytes,dst:Bytes)-instance-method","html_id":"update(src:Bytes,dst:Bytes)-instance-method","name":"update","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes)","args_html":"(src : Bytes, dst : Bytes)","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":79,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L79"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/Salsa20","path":"Sodium/Cipher/Salsa20.html","kind":"class","full_name":"Sodium::Cipher::Salsa20","name":"Salsa20","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_stream_chacha20_keybytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_stream_chacha20_noncebytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"KEY_SIZE"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"NONCE_SIZE"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_salsa20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_salsa20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/SecretStream","path":"Sodium/Cipher/SecretStream.html","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream","abstract":true,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/secret_stream.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Cipher/SecretStream/XChaCha20Poly1305","kind":"class","full_name":"Sodium::Cipher::SecretStream::XChaCha20Poly1305","name":"XChaCha20Poly1305"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":22,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L22"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"additional:Bytes?-instance-method","html_id":"additional:Bytes?-instance-method","name":"additional","doc":"Used to authentication but not encrypt additional data.\n\n* Set this before encrypting **and** decrypting.\n* This property is set to nil after calling .update.","summary":"<p>Used to authentication but not encrypt additional data.</p>","abstract":false,"args":[],"args_string":" : Bytes?","args_html":" : Bytes?","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L18"},"def":{"name":"additional","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@additional"}},{"id":"additional=(additional:Bytes?)-instance-method","html_id":"additional=(additional:Bytes?)-instance-method","name":"additional=","doc":"Used to authentication but not encrypt additional data.\n\n* Set this before encrypting **and** decrypting.\n* This property is set to nil after calling .update.","summary":"<p>Used to authentication but not encrypt additional data.</p>","abstract":false,"args":[{"name":"additional","doc":null,"default_value":"","external_name":"additional","restriction":"Bytes | ::Nil"}],"args_string":"(additional : Bytes?)","args_html":"(additional : Bytes?)","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L18"},"def":{"name":"additional=","args":[{"name":"additional","doc":null,"default_value":"","external_name":"additional","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@additional = additional"}},{"id":"auth_tag_size:Int32-instance-method","html_id":"auth_tag_size:Int32-instance-method","name":"auth_tag_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":75,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L75"},"def":{"name":"auth_tag_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"decrypt-instance-method","html_id":"decrypt-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":30,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L30"},"def":{"name":"decrypt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encrypt_decrypt = -1"}},{"id":"encrypt-instance-method","html_id":"encrypt-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":26,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L26"},"def":{"name":"encrypt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encrypt_decrypt = 1"}},{"id":"final-instance-method","html_id":"final-instance-method","name":"final","doc":"Provided for compatibility with block ciphers.\nStream ciphers don't have additional data.","summary":"<p>Provided for compatibility with block ciphers.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":66,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L66"},"def":{"name":"final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Bytes.new(0)"}},{"id":"header-instance-method","html_id":"header-instance-method","name":"header","doc":"Only used for encryption.","summary":"<p>Only used for encryption.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":46,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L46"},"def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @encrypt_decrypt != 1\n  raise(\"only call when encrypting\")\nend\nbuf = Bytes.new(header_size)\ninit_state(buf)\nbuf\n"}},{"id":"header=(buf:Bytes)-instance-method","html_id":"header=(buf:Bytes)-instance-method","name":"header=","doc":"Only used for decryption.","summary":"<p>Only used for decryption.</p>","abstract":false,"args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"args_string":"(buf : Bytes)","args_html":"(buf : Bytes)","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":54,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L54"},"def":{"name":"header=","args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @encrypt_decrypt != -1\n  raise(\"only call when decrypting\")\nend\ninit_state(buf)\nbuf\n"}},{"id":"header_size:Int32-instance-method","html_id":"header_size:Int32-instance-method","name":"header_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":74,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L74"},"def":{"name":"header_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"init_state(header_buf:Bytes):Nil-instance-method","html_id":"init_state(header_buf:Bytes):Nil-instance-method","name":"init_state","doc":null,"summary":null,"abstract":true,"args":[{"name":"header_buf","doc":null,"default_value":"","external_name":"header_buf","restriction":"Bytes"}],"args_string":"(header_buf : Bytes) : Nil","args_html":"(header_buf : Bytes) : Nil","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":71,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L71"},"def":{"name":"init_state","args":[{"name":"header_buf","doc":null,"default_value":"","external_name":"header_buf","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"key=(key:Bytes|SecureBuffer)-instance-method","html_id":"key=(key:Bytes|SecureBuffer)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"args_string":"(key : Bytes | SecureBuffer)","args_html":"(key : Bytes | <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L34"},"def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key.bytesize != key_size\n  raise(ArgumentError.new(\"key must be #{key_size} bytes, got #{key.bytesize}\"))\nend\n@key = key\nkey\n"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":73,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L73"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"random_key-instance-method","html_id":"random_key-instance-method","name":"random_key","doc":"Returns a random key in a SecureBuffer.","summary":"<p>Returns a random key in a SecureBuffer.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":41,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L41"},"def":{"name":"random_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.key = SecureBuffer.random(key_size)"}},{"id":"tag:UInt8-instance-method","html_id":"tag:UInt8-instance-method","name":"tag","doc":"* Set tag before encrypting\n* Tag is set after decrypting","summary":"<ul><li>Set tag before encrypting * Tag is set after decrypting</li></ul>","abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":12,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L12"},"def":{"name":"tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag"}},{"id":"tag=(tag)-instance-method","html_id":"tag=(tag)-instance-method","name":"tag=","doc":"* Set tag before encrypting\n* Tag is set after decrypting","summary":"<ul><li>Set tag before encrypting * Tag is set after decrypting</li></ul>","abstract":false,"args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"args_string":"(tag)","args_html":"(tag)","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":12,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L12"},"def":{"name":"tag=","args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag = tag"}},{"id":"update(src:Bytes,dst:Bytes)-instance-method","html_id":"update(src:Bytes,dst:Bytes)-instance-method","name":"update","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes)","args_html":"(src : Bytes, dst : Bytes)","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":70,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L70"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"update(src:Bytes):Bytes-instance-method","html_id":"update(src:Bytes):Bytes-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"args_string":"(src : Bytes) : Bytes","args_html":"(src : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":60,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L60"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"update(src, Bytes.new(src.bytesize + (auth_tag_size * @encrypt_decrypt)))"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/Cipher/SecretStream/XChaCha20Poly1305","path":"Sodium/Cipher/SecretStream/XChaCha20Poly1305.html","kind":"class","full_name":"Sodium::Cipher::SecretStream::XChaCha20Poly1305","name":"XChaCha20Poly1305","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},"doc":"[Libsodium Secret Stream API](https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream)\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n* every .update is it's own authenticated message.  Unlike OpenSSL this class doesn't buffer data.  You must handle the framing yourself.\n* .header must be called for encryption before calling .update\n* .header= must be called for decryption with the data returned from .header before calling .update\n* A tag may be set before encrypting and is set after calling .update when decrypting.\n* .additional may be set before encrypting and must be set before decrypting.\n\nSee `spec/sodium/cipher/secret_stream_spec.cr` for examples on how to use this class.\n\nWARNING: Not verified against test vectors.","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream\">Libsodium Secret Stream API</a></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"auth_tag_size:Int32-instance-method","html_id":"auth_tag_size:Int32-instance-method","name":"auth_tag_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"auth_tag_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_abytes.to_i"}},{"id":"header_size:Int32-instance-method","html_id":"header_size:Int32-instance-method","name":"header_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"header_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_headerbytes.to_i"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_keybytes.to_i"}},{"id":"tag_final-instance-method","html_id":"tag_final-instance-method","name":"tag_final","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"tag_final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_final"}},{"id":"tag_push-instance-method","html_id":"tag_push-instance-method","name":"tag_push","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"tag_push","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_push"}},{"id":"tag_rekey-instance-method","html_id":"tag_rekey-instance-method","name":"tag_rekey","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"tag_rekey","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_rekey"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/secret_stream.cr#L78"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if @initialized\nelse\n  raise(Sodium::Error.new(\"must call .header or .header= first\"))\nend\nmin_dst_size = src.bytesize + (auth_tag_size * @encrypt_decrypt)\nif dst.bytesize < min_dst_size\n  raise(ArgumentError.new(\"dst bytesize must at least #{min_dst_size}, got #{dst.bytesize}\"))\nend\nad, ad_size = if a = @additional\n  {a.to_unsafe, a.bytesize}\nelse\n  {Pointer(UInt8).null, 0}\nend\ncase @encrypt_decrypt\nwhen 1\n  if (LibSodium.crypto_secretstream_xchacha20poly1305_push(@state.to_slice, dst.to_slice, out dst_size, src, src.bytesize, ad, ad_size, @tag)) != 0\n    raise(Sodium::Error.new(\"crypto_streamsecret_xchacha20poly1305_xor_ic\"))\n  end\n  @tag = 0\n  @additional = nil\n  dst[0, dst_size]\nwhen -1\n  if (LibSodium.crypto_secretstream_xchacha20poly1305_pull(@state.to_slice, dst.to_slice, out dst_size2, out @tag, src, src.bytesize, ad, ad_size)) != 0\n    raise(Sodium::Error.new(\"crypto_streamsecret_xchacha20poly1305_xor_ic\"))\n  end\n  @additional = nil\n  dst[0, dst_size2]\nelse\n  abort(\"invalid encrypt_decrypt state #{@encrypt_decrypt}\")\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Cipher/XChaCha20","path":"Sodium/Cipher/XChaCha20.html","kind":"class","full_name":"Sodium::Cipher::XChaCha20","name":"XChaCha20","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_stream_chacha20_keybytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_stream_chacha20_noncebytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"KEY_SIZE"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"NONCE_SIZE"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_xchacha20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_xchacha20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Cipher/XSalsa20","path":"Sodium/Cipher/XSalsa20.html","kind":"class","full_name":"Sodium::Cipher::XSalsa20","name":"XSalsa20","abstract":false,"superclass":{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"sodium/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_stream_chacha20_keybytes.to_i32","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_stream_chacha20_noncebytes.to_i32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"KEY_SIZE"}},{"id":"nonce_size:Int32-instance-method","html_id":"nonce_size:Int32-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"NONCE_SIZE"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","args_html":"(src : Bytes, dst : Bytes) : Bytes","location":{"filename":"src/sodium/cipher/chalsa.cr","line_number":88,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/cipher/chalsa.cr#L88"},"def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_xsalsa20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_xsalsa20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/CryptoBox","path":"Sodium/CryptoBox.html","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/crypto_box.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L8"},{"filename":"src/sodium/crypto_box/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L4"},{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L6"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MAC_SIZE","name":"MAC_SIZE","value":"LibSodium.crypto_box_macbytes.to_i","doc":null,"summary":null}],"included_modules":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Use Sodium::CryptoBox::SecretKey#box","summary":"<p>Use Sodium::CryptoBox::SecretKey#box</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"decrypt(src:Bytes,dst=Bytes.new(src.bytesize-MAC_SIZE),nonce=Nonce.random):Bytes-instance-method","html_id":"decrypt(src:Bytes,dst=Bytes.new(src.bytesize-MAC_SIZE),nonce=Nonce.random):Bytes-instance-method","name":"decrypt","doc":"Returns decrypted message.\n\nOptionally supply a destination buffer.","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"args_string":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">-</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : Bytes","args_html":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">-</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : Bytes","location":{"filename":"src/sodium/crypto_box.cr","line_number":55,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L55"},"def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (LibSodium.crypto_box_open_easy_afternm(dst, src, src.bytesize, nonce.to_slice, @key)) != 0\n  raise(Error::DecryptionFailed.new(\"crypto_box_open_easy\"))\nend\ndst\n"}},{"id":"decrypt(src)-instance-method","html_id":"decrypt(src)-instance-method","name":"decrypt","doc":"Returns decrypted message.\n","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","args_html":"(src)","location":{"filename":"src/sodium/crypto_box.cr","line_number":48,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L48"},"def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"decrypt(src.to_slice)"}},{"id":"encrypt(src:Bytes,dst=Bytes.new(src.bytesize+MAC_SIZE),nonce=Nonce.random):Tuple(Bytes,Nonce)-instance-method","html_id":"encrypt(src:Bytes,dst=Bytes.new(src.bytesize+MAC_SIZE),nonce=Nonce.random):Tuple(Bytes,Nonce)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}\n\nOptionally supply a destination buffer.","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"args_string":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">+</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : Tuple(Bytes, Nonce)","args_html":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">+</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : Tuple(Bytes, <a href=\"../Sodium/Nonce.html\">Nonce</a>)","location":{"filename":"src/sodium/crypto_box.cr","line_number":38,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L38"},"def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Nonce)","visibility":"Public","body":"nonce.used!\nif (LibSodium.crypto_box_easy_afternm(dst, src, src.bytesize, nonce.to_slice, @key.to_slice)) != 0\n  raise(Error.new(\"crypto_box_easy\"))\nend\n{dst, nonce}\n"}},{"id":"encrypt(src)-instance-method","html_id":"encrypt(src)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","args_html":"(src)","location":{"filename":"src/sodium/crypto_box.cr","line_number":31,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box.cr#L31"},"def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice)"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/CryptoBox/PublicKey","path":"Sodium/CryptoBox/PublicKey.html","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey","abstract":false,"superclass":{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/crypto_box/public_key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_box_publickeybytes.to_i","doc":null,"summary":null},{"id":"SEAL_SIZE","name":"SEAL_SIZE","value":"LibSodium.crypto_box_sealbytes","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/CryptoBox","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L18"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"encrypt(src,dst:Bytes?=nil)-instance-method","html_id":"encrypt(src,dst:Bytes?=nil)-instance-method","name":"encrypt","doc":"Anonymously send messages to a recipient given its public key.\n\nOptionally supply a destination buffer.\n\nFor authenticated message use `secret_key.box(recipient_public_key).encrypt`.","summary":"<p>Anonymously send messages to a recipient given its public key.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>)","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L29"},"def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice, dst)"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":10,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L10"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@bytes.to_slice"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/CryptoBox/PublicKey/SerializeConverter","path":"Sodium/CryptoBox/PublicKey/SerializeConverter.html","kind":"module","full_name":"Sodium::CryptoBox::PublicKey::SerializeConverter","name":"SerializeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/crypto_box/public_key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L45"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/CryptoBox/PublicKey","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey"},"doc":null,"summary":null,"class_methods":[{"id":"from_json(value:JSON::PullParser):PublicKey-class-method","html_id":"from_json(value:JSON::PullParser):PublicKey-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"args_string":"(value : JSON::PullParser) : PublicKey","args_html":"(value : JSON::PullParser) : <a href=\"../../../Sodium/CryptoBox/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":50,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L50"},"def":{"name":"from_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"PublicKey.new(Base64.decode(value.read_string))"}},{"id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : PublicKey","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : <a href=\"../../../Sodium/CryptoBox/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":58,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L58"},"def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.class}\")\nend\nPublicKey.new(Base64.decode(node.value))\n"}},{"id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","html_id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : PublicKey, json : JSON::Builder)","args_html":"(value : <a href=\"../../../Sodium/CryptoBox/PublicKey.html\">PublicKey</a>, json : JSON::Builder)","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":46,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L46"},"def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value.to_slice))"}},{"id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","html_id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : PublicKey, yaml : YAML::Nodes::Builder)","args_html":"(value : <a href=\"../../../Sodium/CryptoBox/PublicKey.html\">PublicKey</a>, yaml : YAML::Nodes::Builder)","location":{"filename":"src/sodium/crypto_box/public_key.cr","line_number":54,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/public_key.cr#L54"},"def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(Base64.strict_encode(value.to_slice))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/CryptoBox/SecretKey","path":"Sodium/CryptoBox/SecretKey.html","kind":"class","full_name":"Sodium::CryptoBox::SecretKey","name":"SecretKey","abstract":false,"superclass":{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":37,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L37"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_box_secretkeybytes.to_i","doc":null,"summary":null},{"id":"SEAL_SIZE","name":"SEAL_SIZE","value":"LibSodium.crypto_box_sealbytes.to_i","doc":null,"summary":null},{"id":"SEED_SIZE","name":"SEED_SIZE","value":"LibSodium.crypto_box_seedbytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/CryptoBox","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox"},"doc":"You may either send encrypted signed messages using \"Authenticated encryption\" or encrypt unsigned messages using \"Sealed Boxes\".\n\nFor signing without encryption see `Sodium::Sign::SecretKey`.\n\n## Authenticated encryption\n[https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption](https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption#purpose)\n\nUsage:\n```\nbob = Sodium::CryptoBox::SecretKey.new\nalice = Sodium::CryptoBox::SecretKey.new\nmessage = \"hi\"\n\n# Encrypt and sign a message from bob to alice's public_key\nbob.box alice.public_key do |box|\n  ciphertext = box.encrypt message\nend\n```\n\n## Sealed Boxes\n[https://libsodium.gitbook.io/doc/public-key_cryptography/sealed_boxes](https://libsodium.gitbook.io/doc/public-key_cryptography/sealed_boxes#purpose)\n\nUsage:\n```\nsecret_key = Sodium::CryptoBox::SecretKey.new\npublic_key = secret_key.public_key\n\nciphertext = public_key.encrypt message\nsecret_key.decrypt ciphertext\n```","summary":"<p>You may either send encrypted signed messages using \"Authenticated encryption\" or encrypt unsigned messages using \"Sealed Boxes\".</p>","class_methods":[],"constructors":[{"id":"new(sbuf:SecureBuffer,pkey:Bytes?=nil)-class-method","html_id":"new(sbuf:SecureBuffer,pkey:Bytes?=nil)-class-method","name":"new","doc":"Use existing secret and public keys.\n\nTakes ownership of an existing key in a SecureBuffer.\nRecomputes the public key from a secret key if missing.","summary":"<p>Use existing secret and public keys.</p>","abstract":false,"args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"args_string":"(sbuf : SecureBuffer, pkey : Bytes? = <span class=\"n\">nil</span>)","args_html":"(sbuf : <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>, pkey : Bytes? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":62,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L62"},"def":{"name":"new","args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sbuf, pkey)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,pkey:Bytes?=nil)-class-method","html_id":"new(bytes:Bytes,pkey:Bytes?=nil)-class-method","name":"new","doc":"Use existing secret and public keys.\n\nCopies secret key to a SecureBuffer.\nRecomputes the public key from a secret key if missing.","summary":"<p>Use existing secret and public keys.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"args_string":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>)","args_html":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L78"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, pkey)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random secret/public key pair.","summary":"<p>Generate a new random secret/public key pair.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":50,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L50"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:Bytes,erase=false)-class-method","html_id":"new(*,seed:Bytes,erase=false)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.\n\nCopies seed to a SecureBuffer.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":94,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L94"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:SecureBuffer)-class-method","html_id":"new(*,seed:SecureBuffer)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"args_string":"(*, seed : SecureBuffer)","args_html":"(*, seed : <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":106,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L106"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"box(public_key):CryptoBox-instance-method","html_id":"box(public_key):CryptoBox-instance-method","name":"box","doc":"Return a Box containing a precomputed shared secret for use with authenticated encryption/decryption.","summary":"<p>Return a Box containing a precomputed shared secret for use with authenticated encryption/decryption.</p>","abstract":false,"args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"args_string":"(public_key) : CryptoBox","args_html":"(public_key) : <a href=\"../../Sodium/CryptoBox.html\">CryptoBox</a>","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":123,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L123"},"def":{"name":"box","args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox","visibility":"Public","body":"CryptoBox.new(self, public_key)"}},{"id":"box(public_key,&)-instance-method","html_id":"box(public_key,&)-instance-method","name":"box","doc":"Create a new box and automatically close when the block exits.","summary":"<p>Create a new box and automatically close when the block exits.</p>","abstract":false,"args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"args_string":"(public_key, &)","args_html":"(public_key, &)","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":128,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L128"},"def":{"name":"box","args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"b = box(public_key)\nbegin\n  yield b\nensure\n  b.close\nend\n"}},{"id":"decrypt(src,dst:Bytes?=nil):Bytes-instance-method","html_id":"decrypt(src,dst:Bytes?=nil):Bytes-instance-method","name":"decrypt","doc":"Anonymously receive messages without a signature.\n\nFor authenticated messages use `secret_key.box(recipient_public_key).decrypt`.\n\nOptionally supply a destination buffer.","summary":"<p>Anonymously receive messages without a signature.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>) : Bytes","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>) : Bytes","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":142,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L142"},"def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"decrypt(src.to_slice, dst)"}},{"id":"decrypt_string(src,dst:Bytes?=nil):String-instance-method","html_id":"decrypt_string(src,dst:Bytes?=nil):String-instance-method","name":"decrypt_string","doc":"Anonymously receive messages without a signature.\n\nFor authenticated messages use `secret_key.box(recipient_public_key).decrypt`.\n\nOptionally supply a destination buffer.","summary":"<p>Anonymously receive messages without a signature.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>) : String","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>) : String","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":151,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L151"},"def":{"name":"decrypt_string","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"msg = decrypt(src.to_slice, dst)\nString.new(msg)\n"}},{"id":"public_key:PublicKey-instance-method","html_id":"public_key:PublicKey-instance-method","name":"public_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PublicKey","args_html":" : <a href=\"../../Sodium/CryptoBox/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":42,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L42"},"def":{"name":"public_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"@public_key"}},{"id":"seed-instance-method","html_id":"seed-instance-method","name":"seed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":117,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L117"},"def":{"name":"seed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@seed.not_nil!.to_slice"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/crypto_box/secret_key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/crypto_box/secret_key.cr#L45"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@sbuf.to_slice"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Digest","path":"Sodium/Digest.html","kind":"module","full_name":"Sodium::Digest","name":"Digest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/digest/blake2b.cr","line_number":7,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L7"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Digest/Blake2b","path":"Sodium/Digest/Blake2b.html","kind":"class","full_name":"Sodium::Digest::Blake2b","name":"Blake2b","abstract":false,"superclass":{"html_id":"sodium/Digest","kind":"class","full_name":"Digest","name":"Digest"},"ancestors":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Digest","kind":"class","full_name":"Digest","name":"Digest"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/digest/blake2b.cr","line_number":19,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L19"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_generichash_blake2b_keybytes.to_i","doc":"32","summary":"<p>32</p>"},{"id":"KEY_SIZE_MAX","name":"KEY_SIZE_MAX","value":"LibSodium.crypto_generichash_blake2b_keybytes_max.to_i","doc":"64","summary":"<p>64</p>"},{"id":"KEY_SIZE_MIN","name":"KEY_SIZE_MIN","value":"LibSodium.crypto_generichash_blake2b_keybytes_min.to_i","doc":"16","summary":"<p>16</p>"},{"id":"Log","name":"Log","value":"::Log.for(self)","doc":null,"summary":null},{"id":"OUT_SIZE","name":"OUT_SIZE","value":"LibSodium.crypto_generichash_blake2b_bytes.to_i32","doc":"32","summary":"<p>32</p>"},{"id":"OUT_SIZE_MAX","name":"OUT_SIZE_MAX","value":"LibSodium.crypto_generichash_blake2b_bytes_max.to_i32","doc":"64","summary":"<p>64</p>"},{"id":"OUT_SIZE_MIN","name":"OUT_SIZE_MIN","value":"LibSodium.crypto_generichash_blake2b_bytes_min.to_i32","doc":"16","summary":"<p>16</p>"},{"id":"PERSONAL_SIZE","name":"PERSONAL_SIZE","value":"LibSodium.crypto_generichash_blake2b_personalbytes.to_i","doc":"16","summary":"<p>16</p>"},{"id":"SALT_SIZE","name":"SALT_SIZE","value":"LibSodium.crypto_generichash_blake2b_saltbytes.to_i","doc":"16","summary":"<p>16</p>"}],"included_modules":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Digest","kind":"module","full_name":"Sodium::Digest","name":"Digest"},"doc":"Hash data using Blake2b.\n\nCompatible with the Crystal OpenSSL::Digest interface.\n\nUsage:\n```\ndigest = Blake2b.new\ndigest.update data\ndigest.update data\ndigest.hexfinal => String\n```","summary":"<p>Hash data using Blake2b.</p>","class_methods":[],"constructors":[{"id":"new(digest_size:Int32=OUT_SIZE,key:Bytes?|SecureBuffer?=nil,salt:Bytes?=nil,personal:Bytes?=nil)-class-method","html_id":"new(digest_size:Int32=OUT_SIZE,key:Bytes?|SecureBuffer?=nil,salt:Bytes?=nil,personal:Bytes?=nil)-class-method","name":"new","doc":"Create a new Blake2b Digest.\n\ndigest_size is selectable.  Use 32 for Blake2b256 (libsodium default), 64 for Blake2b512\nor any value between OUT_SIZE_MIN and OUT_SIZE_MAX.  Many libsodium bindings only support [256] or [256 and 512] bit output.\n\n`key`, `salt`, and `personal` are all optional.  Many other libsodium bindings don't support them.\nCheck the other implementation(s) you need to interoperate with before using.","summary":"<p>Create a new Blake2b Digest.</p>","abstract":false,"args":[{"name":"digest_size","doc":null,"default_value":"OUT_SIZE","external_name":"digest_size","restriction":"Int32"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"Bytes | ::Nil | SecureBuffer | ::Nil"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | ::Nil"},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":"Bytes | ::Nil"}],"args_string":"(digest_size : Int32 = <span class=\"t\">OUT_SIZE</span>, key : Bytes? | SecureBuffer? = <span class=\"n\">nil</span>, salt : Bytes? = <span class=\"n\">nil</span>, personal : Bytes? = <span class=\"n\">nil</span>)","args_html":"(digest_size : Int32 = <span class=\"t\">OUT_SIZE</span>, key : Bytes? | <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>? = <span class=\"n\">nil</span>, salt : Bytes? = <span class=\"n\">nil</span>, personal : Bytes? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":65,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L65"},"def":{"name":"new","args":[{"name":"digest_size","doc":null,"default_value":"OUT_SIZE","external_name":"digest_size","restriction":"Int32"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"Bytes | ::Nil | SecureBuffer | ::Nil"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | ::Nil"},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(digest_size, key, salt, personal)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":161,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L161"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dup"}},{"id":"digest_size:Int32-instance-method","html_id":"digest_size:Int32-instance-method","name":"digest_size","doc":"Returns the digest output size in bytes.","summary":"<p>Returns the digest output size in bytes.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":46,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L46"},"def":{"name":"digest_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@digest_size"}},{"id":"final_impl(dst:Bytes):Nil-instance-method","html_id":"final_impl(dst:Bytes):Nil-instance-method","name":"final_impl","doc":"Stores the output digest of #digest_size bytes in dst.","summary":"<p>Stores the output digest of #digest_size bytes in dst.</p>","abstract":false,"args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(dst : Bytes) : Nil","args_html":"(dst : Bytes) : Nil","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":144,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L144"},"def":{"name":"final_impl","args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ret = LibSodium.crypto_generichash_blake2b_final(@state.to_slice, dst, dst.bytesize)\nif ret != 0\n  raise(Sodium::Error.new(\"crypto_generichash_blake2b_final #{ret.inspect}\"))\nend\n"}},{"id":"hexfinal(dst:Bytes):Nil-instance-method","html_id":"hexfinal(dst:Bytes):Nil-instance-method","name":"hexfinal","doc":null,"summary":null,"abstract":false,"args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(dst : Bytes) : Nil","args_html":"(dst : Bytes) : Nil","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":90,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L90"},"def":{"name":"hexfinal","args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"dsize = digest_size\nif dst.bytesize == (dsize * 2)\nelse\n  raise(ArgumentError.new(\"Incorrect dst size: #{dst.bytesize}, expected: #{dsize * 2}\"))\nend\nsary = uninitialized StaticArray(UInt8, 64)\ntmp = sary.to_slice[0, dsize]\nfinal(tmp)\ntmp.hexstring(dst)\n"}},{"id":"hexfinal:String-instance-method","html_id":"hexfinal:String-instance-method","name":"hexfinal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":90,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L90"},"def":{"name":"hexfinal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"final.hexstring"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":50,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L50"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_size"}},{"id":"reset_impl:Nil-instance-method","html_id":"reset_impl:Nil-instance-method","name":"reset_impl","doc":"Resets the object to it's initial state.","summary":"<p>Resets the object to it's initial state.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":151,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L151"},"def":{"name":"reset_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"key = @key.to_unsafe\nsalt = @salt.to_unsafe\npersonal = @personal.to_unsafe\nif (LibSodium.crypto_generichash_blake2b_init_salt_personal(@state.to_slice, key, @key_size, @digest_size, salt, personal)) != 0\n  raise(Sodium::Error.new(\"blake2b_init_key_salt_personal\"))\nend\n"}},{"id":"update_impl(data:Bytes):Nil-instance-method","html_id":"update_impl(data:Bytes):Nil-instance-method","name":"update_impl","doc":"Hashes data incrementally.","summary":"<p>Hashes data incrementally.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes) : Nil","args_html":"(data : Bytes) : Nil","location":{"filename":"src/sodium/digest/blake2b.cr","line_number":138,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/digest/blake2b.cr#L138"},"def":{"name":"update_impl","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (LibSodium.crypto_generichash_blake2b_update(@state.to_slice, data, data.bytesize)) != 0\n  raise(Sodium::Error.new(\"crypto_generichash_blake2b_update\"))\nend"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Error","path":"Sodium/Error.html","kind":"class","full_name":"Sodium::Error","name":"Error","abstract":false,"superclass":{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/error.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/error.cr#L4"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Error/DecryptionFailed","kind":"class","full_name":"Sodium::Error::DecryptionFailed","name":"DecryptionFailed"},{"html_id":"sodium/Sodium/Error/MemcmpFailed","kind":"class","full_name":"Sodium::Error::MemcmpFailed","name":"MemcmpFailed"},{"html_id":"sodium/Sodium/Error/VerificationFailed","kind":"class","full_name":"Sodium::Error::VerificationFailed","name":"VerificationFailed"},{"html_id":"sodium/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Error/DecryptionFailed","path":"Sodium/Error/DecryptionFailed.html","kind":"class","full_name":"Sodium::Error::DecryptionFailed","name":"DecryptionFailed","abstract":false,"superclass":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/error.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/error.cr#L8"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Error/MemcmpFailed","path":"Sodium/Error/MemcmpFailed.html","kind":"class","full_name":"Sodium::Error::MemcmpFailed","name":"MemcmpFailed","abstract":false,"superclass":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/error.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/error.cr#L11"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Error/VerificationFailed","path":"Sodium/Error/VerificationFailed.html","kind":"class","full_name":"Sodium::Error::VerificationFailed","name":"VerificationFailed","abstract":false,"superclass":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/error.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/error.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Kdf","path":"Sodium/Kdf.html","kind":"class","full_name":"Sodium::Kdf","name":"Kdf","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/kdf.cr","line_number":32,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L32"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"CONTEXT_SIZE","name":"CONTEXT_SIZE","value":"LibSodium.crypto_kdf_contextbytes","doc":null,"summary":null},{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_kdf_keybytes.to_i","doc":null,"summary":null}],"included_modules":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"```","summary":"<pre><code class=\"language-crystal\"></code></pre>","class_methods":[],"constructors":[{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Use an existing KDF key.\n\n* Copies key to a new SecureBuffer\n* Optionally erases bytes after copying if erase is set","summary":"<p>Use an existing KDF key.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/kdf.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L45"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(sbuf:SecureBuffer)-class-method","html_id":"new(sbuf:SecureBuffer)-class-method","name":"new","doc":"Use an existing KDF SecureBuffer key.","summary":"<p>Use an existing KDF SecureBuffer key.</p>","abstract":false,"args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"}],"args_string":"(sbuf : SecureBuffer)","args_html":"(sbuf : <a href=\"../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/kdf.cr","line_number":54,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L54"},"def":{"name":"new","args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sbuf)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random KDF key.\n\nMake sure to save kdf.to_slice before kdf goes out of scope.","summary":"<p>Generate a new random KDF key.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/kdf.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L64"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"derive(context,subkey_id,subkey_size):SecureBuffer-instance-method","html_id":"derive(context,subkey_id,subkey_size):SecureBuffer-instance-method","name":"derive","doc":"Derive a consistent subkey based on `context` and `subkey_id`.\n\ncontext and subkey don't need to be secret\n* context must be 8 bytes\n* subkey_size must be 16..64 bytes as of libsodium 1.0.17\n\nReturns a SecureBuffer.  May transfer ownership to SecretBox or SecretKey without copying.","summary":"<p>Derive a consistent subkey based on <code>context</code> and <code>subkey_id</code>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""},{"name":"subkey_size","doc":null,"default_value":"","external_name":"subkey_size","restriction":""}],"args_string":"(context, subkey_id, subkey_size) : SecureBuffer","args_html":"(context, subkey_id, subkey_size) : <a href=\"../Sodium/SecureBuffer.html\">SecureBuffer</a>","location":{"filename":"src/sodium/kdf.cr","line_number":75,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L75"},"def":{"name":"derive","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""},{"name":"subkey_size","doc":null,"default_value":"","external_name":"subkey_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"context = context.to_slice\nif context.bytesize != CONTEXT_SIZE\n  raise(ArgumentError.new(\"context must be #{CONTEXT_SIZE}, got #{context.bytesize}\"))\nend\nsubkey = SecureBuffer.new(subkey_size)\n@sbuf.readonly do\n  if (ret = LibSodium.crypto_kdf_derive_from_key(subkey, subkey.bytesize, subkey_id, context, self.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_kdf_derive_from_key returned #{ret} (subkey size is probably out of range)\"))\n  end\nend\nsubkey\n"}},{"id":"derive_aead_xchacha20poly1305_ietf(context,subkey_id):Cipher::Aead::XChaCha20Poly1305Ietf-instance-method","html_id":"derive_aead_xchacha20poly1305_ietf(context,subkey_id):Cipher::Aead::XChaCha20Poly1305Ietf-instance-method","name":"derive_aead_xchacha20poly1305_ietf","doc":"Convenience method to create a new CryptoBox::Aead::XChaCha20Poly1305Ietf without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new CryptoBox::Aead::XChaCha20Poly1305Ietf without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : Cipher::Aead::XChaCha20Poly1305Ietf","args_html":"(context, subkey_id) : <a href=\"../Sodium/Cipher/Aead/XChaCha20Poly1305Ietf.html\">Cipher::Aead::XChaCha20Poly1305Ietf</a>","location":{"filename":"src/sodium/kdf.cr","line_number":110,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L110"},"def":{"name":"derive_aead_xchacha20poly1305_ietf","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cipher::Aead::XChaCha20Poly1305Ietf","visibility":"Public","body":"subkey = derive(context, subkey_id, Cipher::Aead::XChaCha20Poly1305Ietf::KEY_SIZE)\nCipher::Aead::XChaCha20Poly1305Ietf.new(subkey)\n"}},{"id":"derive_cryptobox(context,subkey_id):CryptoBox::SecretKey-instance-method","html_id":"derive_cryptobox(context,subkey_id):CryptoBox::SecretKey-instance-method","name":"derive_cryptobox","doc":"Convenience method to create a new CryptoBox::Secret without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new CryptoBox::Secret without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : CryptoBox::SecretKey","args_html":"(context, subkey_id) : <a href=\"../Sodium/CryptoBox/SecretKey.html\">CryptoBox::SecretKey</a>","location":{"filename":"src/sodium/kdf.cr","line_number":94,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L94"},"def":{"name":"derive_cryptobox","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox::SecretKey","visibility":"Public","body":"subkey = derive(context, subkey_id, CryptoBox::SecretKey::SEED_SIZE)\nCryptoBox::SecretKey.new(seed: subkey)\n"}},{"id":"derive_secretbox(context,subkey_id):SecretBox-instance-method","html_id":"derive_secretbox(context,subkey_id):SecretBox-instance-method","name":"derive_secretbox","doc":"Convenience method to create a new SecretBox without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new SecretBox without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : SecretBox","args_html":"(context, subkey_id) : <a href=\"../Sodium/SecretBox.html\">SecretBox</a>","location":{"filename":"src/sodium/kdf.cr","line_number":118,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L118"},"def":{"name":"derive_secretbox","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecretBox","visibility":"Public","body":"subkey = derive(context, subkey_id, SecretBox::KEY_SIZE)\nSecretBox.new(subkey)\n"}},{"id":"derive_sign(context,subkey_id):Sign::SecretKey-instance-method","html_id":"derive_sign(context,subkey_id):Sign::SecretKey-instance-method","name":"derive_sign","doc":"Convenience method to create a new Sign::Secret without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new Sign::Secret without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : Sign::SecretKey","args_html":"(context, subkey_id) : <a href=\"../Sodium/Sign/SecretKey.html\">Sign::SecretKey</a>","location":{"filename":"src/sodium/kdf.cr","line_number":102,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L102"},"def":{"name":"derive_sign","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Sign::SecretKey","visibility":"Public","body":"subkey = derive(context, subkey_id, Sign::SecretKey::SEED_SIZE)\nSign::SecretKey.new(seed: subkey)\n"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/kdf.cr","line_number":39,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/kdf.cr#L39"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@sbuf.to_slice"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Key","path":"Sodium/Key.html","kind":"class","full_name":"Sodium::Key","name":"Key","abstract":true,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/key.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/CryptoBox/PublicKey","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey"},{"html_id":"sodium/Sodium/CryptoBox/SecretKey","kind":"class","full_name":"Sodium::CryptoBox::SecretKey","name":"SecretKey"},{"html_id":"sodium/Sodium/SecretBox","kind":"class","full_name":"Sodium::SecretBox","name":"SecretBox"},{"html_id":"sodium/Sodium/Sign/PublicKey","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey"},{"html_id":"sodium/Sodium/Sign/SecretKey","kind":"class","full_name":"Sodium::Sign::SecretKey","name":"SecretKey"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/key.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/key.cr#L8"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Nonce","path":"Sodium/Nonce.html","kind":"class","full_name":"Sodium::Nonce","name":"Nonce","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/nonce.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium::NONCE_SIZE.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[{"id":"random-class-method","html_id":"random-class-method","name":"random","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/nonce.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L29"},"def":{"name":"random","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(Random::Secure.random_bytes(NONCE_SIZE))"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/nonce.cr","line_number":33,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L33"},"def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(Bytes.new(NONCE_SIZE))"}}],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/sodium/nonce.cr","line_number":23,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L23"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bytesize(*args,**options)-instance-method","html_id":"bytesize(*args,**options)-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/sodium/nonce.cr","line_number":21,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L21"},"def":{"name":"bytesize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.bytesize(*args, **options)"}},{"id":"bytesize(*args,**options,&)-instance-method","html_id":"bytesize(*args,**options,&)-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/sodium/nonce.cr","line_number":21,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L21"},"def":{"name":"bytesize","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.bytesize(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/nonce.cr","line_number":47,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L47"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@bytes.dup)"}},{"id":"increment-instance-method","html_id":"increment-instance-method","name":"increment","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/nonce.cr","line_number":37,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L37"},"def":{"name":"increment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.sodium_increment(@bytes, @bytes.bytesize)\n@used = false\n"}},{"id":"reusable=(reusable)-instance-method","html_id":"reusable=(reusable)-instance-method","name":"reusable=","doc":"Only use with single use keys.","summary":"<p>Only use with single use keys.</p>","abstract":false,"args":[{"name":"reusable","doc":null,"default_value":"","external_name":"reusable","restriction":""}],"args_string":"(reusable)","args_html":"(reusable)","location":{"filename":"src/sodium/nonce.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L16"},"def":{"name":"reusable=","args":[{"name":"reusable","doc":null,"default_value":"","external_name":"reusable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reusable = reusable"}},{"id":"reusable?:Bool-instance-method","html_id":"reusable?:Bool-instance-method","name":"reusable?","doc":"Only use with single use keys.","summary":"<p>Only use with single use keys.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/sodium/nonce.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L16"},"def":{"name":"reusable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reusable"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns bytes","summary":"<p>Returns bytes</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/nonce.cr","line_number":19,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L19"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@bytes.to_slice"}},{"id":"used!-instance-method","html_id":"used!-instance-method","name":"used!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/nonce.cr","line_number":42,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L42"},"def":{"name":"used!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @used\n  raise(Error::Reused.new(\"attempted nonce reuse\"))\nend\nif @reusable\nelse\n  @used = true\nend\n"}},{"id":"used?:Bool-instance-method","html_id":"used?:Bool-instance-method","name":"used?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/sodium/nonce.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L13"},"def":{"name":"used?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@used"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/Nonce/Error","path":"Sodium/Nonce/Error.html","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error","abstract":false,"superclass":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/nonce.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L6"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Nonce/Error/Reused","kind":"class","full_name":"Sodium::Nonce::Error::Reused","name":"Reused"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Nonce","kind":"class","full_name":"Sodium::Nonce","name":"Nonce"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Nonce/Error/Reused","path":"Sodium/Nonce/Error/Reused.html","kind":"class","full_name":"Sodium::Nonce::Error::Reused","name":"Reused","abstract":false,"superclass":{"html_id":"sodium/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/nonce.cr","line_number":7,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L7"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Nonce/SerializeConverter","path":"Sodium/Nonce/SerializeConverter.html","kind":"module","full_name":"Sodium::Nonce::SerializeConverter","name":"SerializeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/nonce.cr","line_number":51,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L51"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Nonce","kind":"class","full_name":"Sodium::Nonce","name":"Nonce"},"doc":null,"summary":null,"class_methods":[{"id":"from_json(value:JSON::PullParser):Nonce-class-method","html_id":"from_json(value:JSON::PullParser):Nonce-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"args_string":"(value : JSON::PullParser) : Nonce","args_html":"(value : JSON::PullParser) : <a href=\"../../Sodium/Nonce.html\">Nonce</a>","location":{"filename":"src/sodium/nonce.cr","line_number":56,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L56"},"def":{"name":"from_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nonce","visibility":"Public","body":"Nonce.new(Base64.decode(value.read_string))"}},{"id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):Nonce-class-method","html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):Nonce-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : Nonce","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : <a href=\"../../Sodium/Nonce.html\">Nonce</a>","location":{"filename":"src/sodium/nonce.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L64"},"def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nonce","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.class}\")\nend\nNonce.new(Base64.decode(node.value))\n"}},{"id":"to_json(value:Nonce,json:JSON::Builder)-class-method","html_id":"to_json(value:Nonce,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nonce"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : Nonce, json : JSON::Builder)","args_html":"(value : <a href=\"../../Sodium/Nonce.html\">Nonce</a>, json : JSON::Builder)","location":{"filename":"src/sodium/nonce.cr","line_number":52,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L52"},"def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nonce"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value.to_slice))"}},{"id":"to_yaml(value:Nonce,yaml:YAML::Nodes::Builder)-class-method","html_id":"to_yaml(value:Nonce,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nonce"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : Nonce, yaml : YAML::Nodes::Builder)","args_html":"(value : <a href=\"../../Sodium/Nonce.html\">Nonce</a>, yaml : YAML::Nodes::Builder)","location":{"filename":"src/sodium/nonce.cr","line_number":60,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/nonce.cr#L60"},"def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nonce"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(Base64.strict_encode(value.to_slice))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Password","path":"Sodium/Password.html","kind":"module","full_name":"Sodium::Password","name":"Password","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/password.cr","line_number":14,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password.cr#L14"},{"filename":"src/sodium/password/hash.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/hash.cr#L3"},{"filename":"src/sodium/password/key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L5"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MEMLIMIT_INTERACTIVE","name":"MEMLIMIT_INTERACTIVE","value":"LibSodium.crypto_pwhash_memlimit_interactive","doc":null,"summary":null},{"id":"MEMLIMIT_MAX","name":"MEMLIMIT_MAX","value":"LibSodium.crypto_pwhash_memlimit_max","doc":"Don't use this.  Maximum of the library which is more ram than any computer.","summary":"<p>Don't use this.</p>"},{"id":"MEMLIMIT_MIN","name":"MEMLIMIT_MIN","value":"LibSodium.crypto_pwhash_memlimit_min","doc":null,"summary":null},{"id":"OPSLIMIT_INTERACTIVE","name":"OPSLIMIT_INTERACTIVE","value":"LibSodium.crypto_pwhash_opslimit_interactive","doc":null,"summary":null},{"id":"OPSLIMIT_MAX","name":"OPSLIMIT_MAX","value":"LibSodium.crypto_pwhash_opslimit_max","doc":null,"summary":null},{"id":"OPSLIMIT_MIN","name":"OPSLIMIT_MIN","value":"LibSodium.crypto_pwhash_opslimit_min","doc":null,"summary":null},{"id":"OPSLIMIT_MODERATE","name":"OPSLIMIT_MODERATE","value":"LibSodium.crypto_pwhash_opslimit_moderate","doc":null,"summary":null},{"id":"OPSLIMIT_SENSITIVE","name":"OPSLIMIT_SENSITIVE","value":"LibSodium.crypto_pwhash_opslimit_sensitive","doc":null,"summary":null},{"id":"SALT_SIZE","name":"SALT_SIZE","value":"LibSodium.crypto_pwhash_saltbytes","doc":null,"summary":null},{"id":"STR_SIZE","name":"STR_SIZE","value":"LibSodium.crypto_pwhash_strbytes","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"[Argon2 Password Hashing](https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function)\n* `Sodium::Password::Hash`\n* - Use for server side authentication replacing scrypt, bcrypt or crypt.\n* `Sodium::Password::Key::Create`\n* - Use to create a key with auto set parameters based on time.\n* - Often used in single user application such as password safes, gpg/ssh keys or other encrypted storage.\n* `Sodium::Password::Key`\n* - Use with the `params` returned by `Create#create_key` or set your own to derive a consistent key or kdf.\n\n**See `examples/pwhash_selector.cr` for help on selecting parameters.**","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function\">Argon2 Password Hashing</a> * <code><a href=\"../Sodium/Password/Hash.html\">Sodium::Password::Hash</a></code> * - Use for server side authentication replacing scrypt, bcrypt or crypt.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Password/Abstract","path":"Sodium/Password/Abstract.html","kind":"class","full_name":"Sodium::Password::Abstract","name":"Abstract","abstract":true,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/abstract.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L3"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Password/Hash","kind":"class","full_name":"Sodium::Password::Hash","name":"Hash"},{"html_id":"sodium/Sodium/Password/Key","kind":"class","full_name":"Sodium::Password::Key","name":"Key"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":null,"summary":null,"class_methods":[{"id":"from_params(hash)-class-method","html_id":"from_params(hash)-class-method","name":"from_params","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(hash)","args_html":"(hash)","location":{"filename":"src/sodium/password/abstract.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L13"},"def":{"name":"from_params","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pw = self.new\npw.ops = hash[\"ops\"].as(UInt64)\npw.mem = hash[\"mem\"].as(UInt64)\nif (pw.responds_to?(:\"mode=\")) && (mode = hash[\"mode\"]?)\n  pw.mode = Mode.parse(mode.as(String))\nend\nif (pw.responds_to?(:\"salt=\")) && (salt = hash[\"salt\"]?)\n  pw.salt = salt.as(Bytes)\nend\nif (pw.responds_to?(:\"key_size=\")) && (key_size = hash[\"key_size\"]?)\n  pw.key_size = key_size.as(Int32)\nend\nif (pw.responds_to?(:\"tcost=\")) && (tcost = hash[\"tcost\"]?)\n  pw.tcost = tcost.as(Float64)\nend\nif (pw.responds_to?(:\"verify=\")) && (verify = hash[\"verify\"]?)\n  pw.verify = verify.as(Bytes)\nend\npw\n"}}],"constructors":[],"instance_methods":[{"id":"mem:UInt64-instance-method","html_id":"mem:UInt64-instance-method","name":"mem","doc":"Specified in bytes.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/abstract.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L6"},"def":{"name":"mem","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem"}},{"id":"mem=(mem)-instance-method","html_id":"mem=(mem)-instance-method","name":"mem=","doc":"Specified in bytes.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""}],"args_string":"(mem)","args_html":"(mem)","location":{"filename":"src/sodium/password/abstract.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L6"},"def":{"name":"mem=","args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem = mem"}},{"id":"ops:UInt64-instance-method","html_id":"ops:UInt64-instance-method","name":"ops","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/abstract.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L4"},"def":{"name":"ops","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ops"}},{"id":"ops=(ops)-instance-method","html_id":"ops=(ops)-instance-method","name":"ops=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":""}],"args_string":"(ops)","args_html":"(ops)","location":{"filename":"src/sodium/password/abstract.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L4"},"def":{"name":"ops=","args":[{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ops = ops"}},{"id":"random_salt-instance-method","html_id":"random_salt-instance-method","name":"random_salt","doc":"Returns a random salt for use with #derive_key","summary":"<p>Returns a random salt for use with #derive_key</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/abstract.cr","line_number":9,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/abstract.cr#L9"},"def":{"name":"random_salt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Random::Secure.random_bytes(SALT_SIZE)"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Password/Error","path":"Sodium/Password/Error.html","kind":"class","full_name":"Sodium::Password::Error","name":"Error","abstract":false,"superclass":{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password.cr#L29"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/Password/Error/Verify","kind":"class","full_name":"Sodium::Password::Error::Verify","name":"Verify"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Password/Error/Verify","path":"Sodium/Password/Error/Verify.html","kind":"class","full_name":"Sodium::Password::Error::Verify","name":"Verify","abstract":false,"superclass":{"html_id":"sodium/Sodium/Password/Error","kind":"class","full_name":"Sodium::Password::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Password/Error","kind":"class","full_name":"Sodium::Password::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password.cr","line_number":30,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password.cr#L30"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password/Error","kind":"class","full_name":"Sodium::Password::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Password/Hash","path":"Sodium/Password/Hash.html","kind":"class","full_name":"Sodium::Password::Hash","name":"Hash","abstract":false,"superclass":{"html_id":"sodium/Sodium/Password/Abstract","kind":"class","full_name":"Sodium::Password::Abstract","name":"Abstract"},"ancestors":[{"html_id":"sodium/Sodium/Password/Abstract","kind":"class","full_name":"Sodium::Password::Abstract","name":"Abstract"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/hash.cr","line_number":21,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/hash.cr#L21"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":"Argon2 password hashing.  A modern substitute for scrypt, bcrypt or crypt.\n\nOften used to store password hashes on a server and authenticate clients against the stored hash.\n\nUsage:\n```\npwhash = Sodium::Password::Hash.new\n\npwhash.mem = Sodium::Password::MEMLIMIT_MIN\npwhash.ops = Sodium::Password::OPSLIMIT_MIN\n\npass = \"1234\"\nhash = pwhash.create pass\npwhash.verify hash, pass\n```\n\nUse `examples/pwhash_selector.cr` to help choose ops/mem limits.","summary":"<p>Argon2 password hashing.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"create(pass)-instance-method","html_id":"create(pass)-instance-method","name":"create","doc":"Apply the most recent password hashing algorithm against a password.\nReturns a opaque String which includes:\n* the result of a memory-hard, CPU-intensive hash function applied to the password\n* the automatically generated salt used for the previous computation\n* the other parameters required to verify the password, including the algorithm identifier, its version, ops and mem.","summary":"<p>Apply the most recent password hashing algorithm against a password.</p>","abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"args_string":"(pass)","args_html":"(pass)","location":{"filename":"src/sodium/password/hash.cr","line_number":27,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/hash.cr#L27"},"def":{"name":"create","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"outstr = Bytes.new(STR_SIZE)\nif (LibSodium.crypto_pwhash_str(outstr, pass, pass.bytesize, @ops, @mem)) != 0\n  raise(Sodium::Error.new(\"crypto_pwhash_str\"))\nend\noutstr\n"}},{"id":"needs_rehash?(str):Bool-instance-method","html_id":"needs_rehash?(str):Bool-instance-method","name":"needs_rehash?","doc":"Check if a password verification string str matches the parameters ops and mem, and the current default algorithm.","summary":"<p>Check if a password verification string str matches the parameters ops and mem, and the current default algorithm.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str) : Bool","args_html":"(str) : Bool","location":{"filename":"src/sodium/password/hash.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/hash.cr#L45"},"def":{"name":"needs_rehash?","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"case LibSodium.crypto_pwhash_str_needs_rehash(str, @ops, @mem)\nwhen 0\n  false\nwhen 1\n  true\nelse\n  raise(Sodium::Error.new(\"crypto_pwhash_str_needs_rehash\"))\nend"}},{"id":"verify(str,pass)-instance-method","html_id":"verify(str,pass)-instance-method","name":"verify","doc":"Verify a password against a stored String.\nraises PasswordVerifyError on failure.","summary":"<p>Verify a password against a stored String.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"args_string":"(str, pass)","args_html":"(str, pass)","location":{"filename":"src/sodium/password/hash.cr","line_number":37,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/hash.cr#L37"},"def":{"name":"verify","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"r = LibSodium.crypto_pwhash_str_verify(str, pass, pass.bytesize)\nif r != 0\n  raise(Error::Verify.new)\nend\nself\n"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Password/Key","path":"Sodium/Password/Key.html","kind":"class","full_name":"Sodium::Password::Key","name":"Key","abstract":false,"superclass":{"html_id":"sodium/Sodium/Password/Abstract","kind":"class","full_name":"Sodium::Password::Abstract","name":"Abstract"},"ancestors":[{"html_id":"sodium/Sodium/Password/Abstract","kind":"class","full_name":"Sodium::Password::Abstract","name":"Abstract"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/key.cr","line_number":9,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L9"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":"See `Sodium::Password::Key::Create`\n\nTODO: Usage example using the same params with multiple passwords.","summary":"<p>See <code><a href=\"../../Sodium/Password/Key/Create.html\">Sodium::Password::Key::Create</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"derive_kdf(pass,*,salt=nil):Kdf-instance-method","html_id":"derive_kdf(pass,*,salt=nil):Kdf-instance-method","name":"derive_kdf","doc":null,"summary":null,"abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""}],"args_string":"(pass, *, salt = <span class=\"n\">nil</span>) : Kdf","args_html":"(pass, *, salt = <span class=\"n\">nil</span>) : <a href=\"../../Sodium/Kdf.html\">Kdf</a>","location":{"filename":"src/sodium/password/key.cr","line_number":22,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L22"},"def":{"name":"derive_kdf","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Kdf","visibility":"Public","body":"key = derive_key(pass, Kdf::KEY_SIZE, salt: salt)\nKdf.new(key)\n"}},{"id":"derive_key(pass:Bytes|String,key_bytes:Int32,*,salt:String|Bytes|Nil=nil):SecureBuffer-instance-method","html_id":"derive_key(pass:Bytes|String,key_bytes:Int32,*,salt:String|Bytes|Nil=nil):SecureBuffer-instance-method","name":"derive_key","doc":"Must set a mode before calling.","summary":"<p>Must set a mode before calling.</p>","abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes | String"},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":"Int32"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"String | Bytes | Nil"}],"args_string":"(pass : Bytes | String, key_bytes : Int32, *, salt : String | Bytes | Nil = <span class=\"n\">nil</span>) : SecureBuffer","args_html":"(pass : Bytes | String, key_bytes : Int32, *, salt : String | Bytes | Nil = <span class=\"n\">nil</span>) : <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>","location":{"filename":"src/sodium/password/key.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L16"},"def":{"name":"derive_key","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes | String"},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":"Int32"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"String | Bytes | Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"key = SecureBuffer.new(key_bytes)\nderive_key(key, pass, salt: salt)\nkey.readonly\n"}},{"id":"mode:Mode-instance-method","html_id":"mode:Mode-instance-method","name":"mode","doc":"Used by and must be set before calling #derive_key","summary":"<p>Used by and must be set before calling #derive_key</p>","abstract":false,"args":[],"args_string":" : Mode","args_html":" : <a href=\"../../Sodium/Password/Mode.html\">Mode</a>","location":{"filename":"src/sodium/password/key.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L11"},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mode","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:Mode)-instance-method","html_id":"mode=(mode:Mode)-instance-method","name":"mode=","doc":"Used by and must be set before calling #derive_key","summary":"<p>Used by and must be set before calling #derive_key</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode"}],"args_string":"(mode : Mode)","args_html":"(mode : <a href=\"../../Sodium/Password/Mode.html\">Mode</a>)","location":{"filename":"src/sodium/password/key.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L11"},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"random_salt!-instance-method","html_id":"random_salt!-instance-method","name":"random_salt!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L45"},"def":{"name":"random_salt!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @salt\n  raise(\"salt already set\")\nend\nself.salt = random_salt\n"}},{"id":"salt:Bytes?-instance-method","html_id":"salt:Bytes?-instance-method","name":"salt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bytes?","args_html":" : Bytes?","location":{"filename":"src/sodium/password/key.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L13"},"def":{"name":"salt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@salt"}},{"id":"salt=(salt:Bytes?)-instance-method","html_id":"salt=(salt:Bytes?)-instance-method","name":"salt=","doc":null,"summary":null,"abstract":false,"args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes | ::Nil"}],"args_string":"(salt : Bytes?)","args_html":"(salt : Bytes?)","location":{"filename":"src/sodium/password/key.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L13"},"def":{"name":"salt=","args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@salt = salt"}},{"id":"to_params(*,salt=nil,key_size=nil,tcost:Float64?=nil)-instance-method","html_id":"to_params(*,salt=nil,key_size=nil,tcost:Float64?=nil)-instance-method","name":"to_params","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"key_size","doc":null,"default_value":"nil","external_name":"key_size","restriction":""},{"name":"tcost","doc":null,"default_value":"nil","external_name":"tcost","restriction":"Float64 | ::Nil"}],"args_string":"(*, salt = <span class=\"n\">nil</span>, key_size = <span class=\"n\">nil</span>, tcost : Float64? = <span class=\"n\">nil</span>)","args_html":"(*, salt = <span class=\"n\">nil</span>, key_size = <span class=\"n\">nil</span>, tcost : Float64? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/password/key.cr","line_number":41,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/key.cr#L41"},"def":{"name":"to_params","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"key_size","doc":null,"default_value":"nil","external_name":"key_size","restriction":""},{"name":"tcost","doc":null,"default_value":"nil","external_name":"tcost","restriction":"Float64 | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Params.new(@mode, @ops, @mem, salt: salt, key_size: key_size, tcost: tcost)"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/Password/Key/Create","path":"Sodium/Password/Key/Create.html","kind":"class","full_name":"Sodium::Password::Key::Create","name":"Create","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/create_key.cr","line_number":43,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L43"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password/Key","kind":"class","full_name":"Sodium::Password::Key","name":"Key"},"doc":"[Argon2 Password Hashing](https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function)\n\n## Create a key for encryption with auto set parameters based on time.\n\nUsage:\n```\npwkc = Sodium::Password::Key::Create.new\n\n# Take approximately 1 second to generate a key.\npwkc.tcost = 1.0\n\n# Memory use will end up between `mem_min` and `mem_max`\npwkc.mem_min = 128 * 1024 * 1024 # 128M\npwkc.mem_max = 256 * 1024 * 1024 # 256M\n\nkdf, params = pwkc.create_kdf pass\n# Or\nkey, params = pwkc.create_key pass, 32\n\n# Save params.[mode, ops, mem, salt, key_size] to derive the same key later.\n# Or serialize `params.to_h`\n```\n\n## Deriving a previously created key.\n\nUsage:\n```\npwkey = Sodium::Password::Key.from_params hash\n# Or\npwkey = Sodium::Password::Key.new\npwkey.mode = Mode.parse serialized[:mode]\npwkey.ops = serialized[:ops]\npwkey.mem = serialized[:mem]\npwkey.salt = serialized[:salt]\nkey_size = serialized[:key_size]\n\nkdf = pwhash.derive_kdf pass\n# Or\nkey = pwkey.derive_key pass, key_size\n```","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function\">Argon2 Password Hashing</a></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"create_kdf(pass,*,salt:Bytes|String|Nil=nil):Tuple(Kdf,Params)-instance-method","html_id":"create_kdf(pass,*,salt:Bytes|String|Nil=nil):Tuple(Kdf,Params)-instance-method","name":"create_kdf","doc":null,"summary":null,"abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | String | Nil"}],"args_string":"(pass, *, salt : Bytes | String | Nil = <span class=\"n\">nil</span>) : Tuple(Kdf, Params)","args_html":"(pass, *, salt : Bytes | String | Nil = <span class=\"n\">nil</span>) : Tuple(<a href=\"../../../Sodium/Kdf.html\">Kdf</a>, <a href=\"../../../Sodium/Password/Params.html\">Params</a>)","location":{"filename":"src/sodium/password/create_key.cr","line_number":75,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L75"},"def":{"name":"create_kdf","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | String | Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"::Tuple(Kdf, Params)","visibility":"Public","body":"key, params = create_key(pass, Kdf::KEY_SIZE, salt: salt)\n{Kdf.new(key), params}\n"}},{"id":"create_key(pass:Bytes|String,key_size,*,salt:Bytes|String|Nil=nil):Tuple(SecureBuffer,Params)-instance-method","html_id":"create_key(pass:Bytes|String,key_size,*,salt:Bytes|String|Nil=nil):Tuple(SecureBuffer,Params)-instance-method","name":"create_key","doc":"Returns a consistent key based on [salt, pass, key_size, mode] in a SecureBuffer **and** Params.\n\nParams are set to run in approximately `tcost` seconds.\n\nMake sure you store `Params` for later use with #derive_key.","summary":"<p>Returns a consistent key based on [salt, pass, key_size, mode] in a SecureBuffer <strong>and</strong> Params.</p>","abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes | String"},{"name":"key_size","doc":null,"default_value":"","external_name":"key_size","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | String | Nil"}],"args_string":"(pass : Bytes | String, key_size, *, salt : Bytes | String | Nil = <span class=\"n\">nil</span>) : Tuple(SecureBuffer, Params)","args_html":"(pass : Bytes | String, key_size, *, salt : Bytes | String | Nil = <span class=\"n\">nil</span>) : Tuple(<a href=\"../../../Sodium/SecureBuffer.html\">SecureBuffer</a>, <a href=\"../../../Sodium/Password/Params.html\">Params</a>)","location":{"filename":"src/sodium/password/create_key.cr","line_number":66,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L66"},"def":{"name":"create_key","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes | String"},{"name":"key_size","doc":null,"default_value":"","external_name":"key_size","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | String | Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"::Tuple(SecureBuffer, Params)","visibility":"Public","body":"pw = Key.new\nsalt || (salt = pw.random_salt)\npw.salt = salt.to_slice\nkey = create_key!(pw, pass.to_slice, key_size)\n{key, pw.to_params(salt: pw.salt, key_size: key_size, tcost: @tcost)}\n"}},{"id":"mem_max:UInt64-instance-method","html_id":"mem_max:UInt64-instance-method","name":"mem_max","doc":"Specified in bytes.\nCurrently defaults to 256M.  May increase between version.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/create_key.cr","line_number":53,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L53"},"def":{"name":"mem_max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@mem_max"}},{"id":"mem_max=(mem_max:UInt64)-instance-method","html_id":"mem_max=(mem_max:UInt64)-instance-method","name":"mem_max=","doc":"Specified in bytes.\nCurrently defaults to 256M.  May increase between version.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[{"name":"mem_max","doc":null,"default_value":"","external_name":"mem_max","restriction":"UInt64"}],"args_string":"(mem_max : UInt64)","args_html":"(mem_max : UInt64)","location":{"filename":"src/sodium/password/create_key.cr","line_number":53,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L53"},"def":{"name":"mem_max=","args":[{"name":"mem_max","doc":null,"default_value":"","external_name":"mem_max","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem_max = mem_max"}},{"id":"mem_min:UInt64-instance-method","html_id":"mem_min:UInt64-instance-method","name":"mem_min","doc":"Specified in bytes.\nCurrently the libsodium default.  May increase between version.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/create_key.cr","line_number":49,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L49"},"def":{"name":"mem_min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem_min"}},{"id":"mem_min=(mem_min)-instance-method","html_id":"mem_min=(mem_min)-instance-method","name":"mem_min=","doc":"Specified in bytes.\nCurrently the libsodium default.  May increase between version.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[{"name":"mem_min","doc":null,"default_value":"","external_name":"mem_min","restriction":""}],"args_string":"(mem_min)","args_html":"(mem_min)","location":{"filename":"src/sodium/password/create_key.cr","line_number":49,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L49"},"def":{"name":"mem_min=","args":[{"name":"mem_min","doc":null,"default_value":"","external_name":"mem_min","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem_min = mem_min"}},{"id":"mode:Mode-instance-method","html_id":"mode:Mode-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mode","args_html":" : <a href=\"../../../Sodium/Password/Mode.html\">Mode</a>","location":{"filename":"src/sodium/password/create_key.cr","line_number":55,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L55"},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mode","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:Mode)-instance-method","html_id":"mode=(mode:Mode)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode"}],"args_string":"(mode : Mode)","args_html":"(mode : <a href=\"../../../Sodium/Password/Mode.html\">Mode</a>)","location":{"filename":"src/sodium/password/create_key.cr","line_number":55,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L55"},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"tcost:Float64-instance-method","html_id":"tcost:Float64-instance-method","name":"tcost","doc":"Specified in seconds.","summary":"<p>Specified in seconds.</p>","abstract":false,"args":[],"args_string":" : Float64","args_html":" : Float64","location":{"filename":"src/sodium/password/create_key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L45"},"def":{"name":"tcost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tcost"}},{"id":"tcost=(tcost)-instance-method","html_id":"tcost=(tcost)-instance-method","name":"tcost=","doc":"Specified in seconds.","summary":"<p>Specified in seconds.</p>","abstract":false,"args":[{"name":"tcost","doc":null,"default_value":"","external_name":"tcost","restriction":""}],"args_string":"(tcost)","args_html":"(tcost)","location":{"filename":"src/sodium/password/create_key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/create_key.cr#L45"},"def":{"name":"tcost=","args":[{"name":"tcost","doc":null,"default_value":"","external_name":"tcost","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tcost = tcost"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Password/Mode","path":"Sodium/Password/Mode.html","kind":"enum","full_name":"Sodium::Password::Mode","name":"Mode","abstract":false,"superclass":null,"ancestors":[{"html_id":"sodium/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"sodium/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"sodium/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/mode.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/mode.cr#L3"}],"repository_name":"sodium","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Argon2i13","name":"Argon2i13","value":"1","doc":"Use the most recent algorithm Argon2id13 for new applications.","summary":"<p>Use the most recent algorithm Argon2id13 for new applications.</p>"},{"id":"Argon2id13","name":"Argon2id13","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":null,"summary":null,"class_methods":[{"id":"default-class-method","html_id":"default-class-method","name":"default","doc":"The currently recommended algorithm, which can change from one version of libsodium to another.","summary":"<p>The currently recommended algorithm, which can change from one version of libsodium to another.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/mode.cr","line_number":9,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/mode.cr#L9"},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(LibSodium.crypto_pwhash_alg_default)"}}],"constructors":[],"instance_methods":[{"id":"argon2i13?-instance-method","html_id":"argon2i13?-instance-method","name":"argon2i13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/mode.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/mode.cr#L5"},"def":{"name":"argon2i13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Argon2i13"}},{"id":"argon2id13?-instance-method","html_id":"argon2id13?-instance-method","name":"argon2id13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/mode.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/mode.cr#L6"},"def":{"name":"argon2id13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Argon2id13"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/Password/Params","path":"Sodium/Password/Params.html","kind":"class","full_name":"Sodium::Password::Params","name":"Params","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/password/params.cr","line_number":2,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L2"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Password","kind":"module","full_name":"Sodium::Password","name":"Password"},"doc":"Contains the params necessary for #derive_key.","summary":"<p>Contains the params necessary for #derive_key.</p>","class_methods":[],"constructors":[{"id":"new(mode,ops,mem,salt=nil,key_size=nil,tcost=nil,verify=nil)-class-method","html_id":"new(mode,ops,mem,salt=nil,key_size=nil,tcost=nil,verify=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":""},{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":""},{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"key_size","doc":null,"default_value":"nil","external_name":"key_size","restriction":""},{"name":"tcost","doc":null,"default_value":"nil","external_name":"tcost","restriction":""},{"name":"verify","doc":null,"default_value":"nil","external_name":"verify","restriction":""}],"args_string":"(mode, ops, mem, salt = <span class=\"n\">nil</span>, key_size = <span class=\"n\">nil</span>, tcost = <span class=\"n\">nil</span>, verify = <span class=\"n\">nil</span>)","args_html":"(mode, ops, mem, salt = <span class=\"n\">nil</span>, key_size = <span class=\"n\">nil</span>, tcost = <span class=\"n\">nil</span>, verify = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/password/params.cr","line_number":15,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L15"},"def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":""},{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":""},{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"key_size","doc":null,"default_value":"nil","external_name":"key_size","restriction":""},{"name":"tcost","doc":null,"default_value":"nil","external_name":"tcost","restriction":""},{"name":"verify","doc":null,"default_value":"nil","external_name":"verify","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, ops, mem, salt, key_size, tcost, verify)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"key_size:Int32?-instance-method","html_id":"key_size:Int32?-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : Int32?","location":{"filename":"src/sodium/password/params.cr","line_number":7,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L7"},"def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@key_size"}},{"id":"key_size=(key_size:Int32?)-instance-method","html_id":"key_size=(key_size:Int32?)-instance-method","name":"key_size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key_size","doc":null,"default_value":"","external_name":"key_size","restriction":"Int32 | ::Nil"}],"args_string":"(key_size : Int32?)","args_html":"(key_size : Int32?)","location":{"filename":"src/sodium/password/params.cr","line_number":7,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L7"},"def":{"name":"key_size=","args":[{"name":"key_size","doc":null,"default_value":"","external_name":"key_size","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_size = key_size"}},{"id":"mem:UInt64-instance-method","html_id":"mem:UInt64-instance-method","name":"mem","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/params.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L4"},"def":{"name":"mem","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@mem"}},{"id":"mem=(mem:UInt64)-instance-method","html_id":"mem=(mem:UInt64)-instance-method","name":"mem=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":"UInt64"}],"args_string":"(mem : UInt64)","args_html":"(mem : UInt64)","location":{"filename":"src/sodium/password/params.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L4"},"def":{"name":"mem=","args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem = mem"}},{"id":"mode:Mode?-instance-method","html_id":"mode:Mode?-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mode?","args_html":" : <a href=\"../../Sodium/Password/Mode.html\">Mode</a>?","location":{"filename":"src/sodium/password/params.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L5"},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mode | ::Nil","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:Mode?)-instance-method","html_id":"mode=(mode:Mode?)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode | ::Nil"}],"args_string":"(mode : Mode?)","args_html":"(mode : <a href=\"../../Sodium/Password/Mode.html\">Mode</a>?)","location":{"filename":"src/sodium/password/params.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L5"},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"ops:UInt64-instance-method","html_id":"ops:UInt64-instance-method","name":"ops","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/sodium/password/params.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L3"},"def":{"name":"ops","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@ops"}},{"id":"ops=(ops:UInt64)-instance-method","html_id":"ops=(ops:UInt64)-instance-method","name":"ops=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":"UInt64"}],"args_string":"(ops : UInt64)","args_html":"(ops : UInt64)","location":{"filename":"src/sodium/password/params.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L3"},"def":{"name":"ops=","args":[{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ops = ops"}},{"id":"salt:Bytes?-instance-method","html_id":"salt:Bytes?-instance-method","name":"salt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bytes?","args_html":" : Bytes?","location":{"filename":"src/sodium/password/params.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L6"},"def":{"name":"salt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@salt"}},{"id":"salt=(salt:Bytes?)-instance-method","html_id":"salt=(salt:Bytes?)-instance-method","name":"salt=","doc":null,"summary":null,"abstract":false,"args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes | ::Nil"}],"args_string":"(salt : Bytes?)","args_html":"(salt : Bytes?)","location":{"filename":"src/sodium/password/params.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L6"},"def":{"name":"salt=","args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@salt = salt"}},{"id":"tcost:Float64?-instance-method","html_id":"tcost:Float64?-instance-method","name":"tcost","doc":"Information only.  Not used to derive a key.","summary":"<p>Information only.</p>","abstract":false,"args":[],"args_string":" : Float64?","args_html":" : Float64?","location":{"filename":"src/sodium/password/params.cr","line_number":10,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L10"},"def":{"name":"tcost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"@tcost"}},{"id":"tcost=(tcost:Float64?)-instance-method","html_id":"tcost=(tcost:Float64?)-instance-method","name":"tcost=","doc":"Information only.  Not used to derive a key.","summary":"<p>Information only.</p>","abstract":false,"args":[{"name":"tcost","doc":null,"default_value":"","external_name":"tcost","restriction":"Float64 | ::Nil"}],"args_string":"(tcost : Float64?)","args_html":"(tcost : Float64?)","location":{"filename":"src/sodium/password/params.cr","line_number":10,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L10"},"def":{"name":"tcost=","args":[{"name":"tcost","doc":null,"default_value":"","external_name":"tcost","restriction":"Float64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tcost = tcost"}},{"id":"to_h-instance-method","html_id":"to_h-instance-method","name":"to_h","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/password/params.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L18"},"def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash = ::Hash(String, Int32 | UInt64 | String | Bytes | Float64).new(initial_capacity: 5)\nhash[\"ops\"] = @ops\nhash[\"mem\"] = @mem\nif m = @mode\n  hash[\"mode\"] = m.to_s\nend\nif s = @salt\n  hash[\"salt\"] = s\nend\nif tc = @tcost\n  hash[\"tcost\"] = tc\nend\nif ks = @key_size\n  hash[\"key_size\"] = ks\nend\nif v = @verify\n  hash[\"verify\"] = v\nend\nhash\n"}},{"id":"verify:Bytes?-instance-method","html_id":"verify:Bytes?-instance-method","name":"verify","doc":"Application specific param to verify a password.","summary":"<p>Application specific param to verify a password.</p>","abstract":false,"args":[],"args_string":" : Bytes?","args_html":" : Bytes?","location":{"filename":"src/sodium/password/params.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L13"},"def":{"name":"verify","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@verify"}},{"id":"verify=(verify:Bytes?)-instance-method","html_id":"verify=(verify:Bytes?)-instance-method","name":"verify=","doc":"Application specific param to verify a password.","summary":"<p>Application specific param to verify a password.</p>","abstract":false,"args":[{"name":"verify","doc":null,"default_value":"","external_name":"verify","restriction":"Bytes | ::Nil"}],"args_string":"(verify : Bytes?)","args_html":"(verify : Bytes?)","location":{"filename":"src/sodium/password/params.cr","line_number":13,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/password/params.cr#L13"},"def":{"name":"verify=","args":[{"name":"verify","doc":null,"default_value":"","external_name":"verify","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verify = verify"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/SecretBox","path":"Sodium/SecretBox.html","kind":"class","full_name":"Sodium::SecretBox","name":"SecretBox","abstract":false,"superclass":{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secret_box.cr","line_number":17,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L17"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_secretbox_keybytes.to_i","doc":null,"summary":null},{"id":"MAC_SIZE","name":"MAC_SIZE","value":"LibSodium.crypto_secretbox_macbytes.to_i","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_secretbox_noncebytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"[https://libsodium.gitbook.io/doc/secret-key_cryptography](https://libsodium.gitbook.io/doc/secret-key_cryptography)\n\n```\nbox = Sodium::SecretBox.new\nmessage = \"foobar\"\nencrypted, nonce = box.encrypt message\n\n# On the other side.\nbox = Sodium::SecretBox.new key\nmessage = key.decrypt encrypted, nonce: nonce\n```","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/secret-key_cryptography\">https://libsodium.gitbook.io/doc/secret-key_cryptography</a></p>","class_methods":[],"constructors":[{"id":"new(key:SecureBuffer)-class-method","html_id":"new(key:SecureBuffer)-class-method","name":"new","doc":"Use an existing SecureBuffer.","summary":"<p>Use an existing SecureBuffer.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"SecureBuffer"}],"args_string":"(key : SecureBuffer)","args_html":"(key : <a href=\"../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/secret_box.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L34"},"def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Copy bytes to a new SecureBuffer\n\nOptionally erases bytes after copying if erase is set.","summary":"<p>Copy bytes to a new SecureBuffer</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/secret_box.cr","line_number":44,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L44"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random key held in a SecureBuffer.","summary":"<p>Generate a new random key held in a SecureBuffer.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secret_box.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L29"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"decrypt(src,dst:Bytes?=nil,*,nonce:Nonce):Bytes-instance-method","html_id":"decrypt(src,dst:Bytes?=nil,*,nonce:Nonce):Bytes-instance-method","name":"decrypt","doc":"Returns decrypted message.\n\nOptionally supply a destination buffer.","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Nonce) : Bytes","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../Sodium/Nonce.html\">Nonce</a>) : Bytes","location":{"filename":"src/sodium/secret_box.cr","line_number":76,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L76"},"def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"decrypt(src.to_slice, dst, nonce: nonce)"}},{"id":"decrypt_string(src,dst:Bytes?=nil,*,nonce:Nonce):String-instance-method","html_id":"decrypt_string(src,dst:Bytes?=nil,*,nonce:Nonce):String-instance-method","name":"decrypt_string","doc":"Returns decrypted message as a `String`.\n\nOptionally supply a destination buffer.","summary":"<p>Returns decrypted message as a <code>String</code>.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Nonce) : String","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../Sodium/Nonce.html\">Nonce</a>) : String","location":{"filename":"src/sodium/secret_box.cr","line_number":83,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L83"},"def":{"name":"decrypt_string","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"msg = decrypt(src.to_slice, dst, nonce: nonce)\nString.new(msg)\n"}},{"id":"encrypt(src,dst:Bytes?=nil,*,nonce:Nonce?=nil)-instance-method","html_id":"encrypt(src,dst:Bytes?=nil,*,nonce:Nonce?=nil)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}\n\nOptionally supply a destination buffer.","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Nonce | ::Nil"}],"args_string":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : Nonce? = <span class=\"n\">nil</span>)","args_html":"(src, dst : Bytes? = <span class=\"n\">nil</span>, *, nonce : <a href=\"../Sodium/Nonce.html\">Nonce</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/sodium/secret_box.cr","line_number":54,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L54"},"def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"dst","doc":null,"default_value":"nil","external_name":"dst","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"nonce","doc":null,"default_value":"nil","external_name":"nonce","restriction":"Nonce | ::Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice, dst, nonce: nonce)"}},{"id":"key:SecureBuffer-instance-method","html_id":"key:SecureBuffer-instance-method","name":"key","doc":"Encryption key","summary":"<p>Encryption key</p>","abstract":false,"args":[],"args_string":" : SecureBuffer","args_html":" : <a href=\"../Sodium/SecureBuffer.html\">SecureBuffer</a>","location":{"filename":"src/sodium/secret_box.cr","line_number":26,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L26"},"def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"@key"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/secret_box.cr","line_number":23,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secret_box.cr#L23"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@key.to_slice"}}],"macros":[],"types":[]},{"html_id":"sodium/Sodium/SecureBuffer","path":"Sodium/SecureBuffer.html","kind":"class","full_name":"Sodium::SecureBuffer","name":"SecureBuffer","abstract":false,"superclass":{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":9,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L9"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Allocate guarded memory using [sodium_malloc](https://libsodium.gitbook.io/doc/memory_management)\n\n#initialize returns readonly or readwrite for thread safety\nWhen state changes are required (such as using #noaccess) and the buffer is accessed from multiple threads wrap each #readonly/#readwrite block in a lock.","summary":"<p>Allocate guarded memory using <a href=\"https://libsodium.gitbook.io/doc/memory_management\">sodium_malloc</a></p>","class_methods":[{"id":"random(size)-class-method","html_id":"random(size)-class-method","name":"random","doc":"Returns a **readonly** random SecureBuffer.","summary":"<p>Returns a <strong>readonly</strong> random SecureBuffer.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":42,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L42"},"def":{"name":"random","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buf = new(size)\nRandom::Secure.random_bytes(buf.to_slice)\nbuf.readonly\n"}}],"constructors":[{"id":"new(bytesize:Int32)-class-method","html_id":"new(bytesize:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int32"}],"args_string":"(bytesize : Int32)","args_html":"(bytesize : Int32)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":36,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L36"},"def":{"name":"new","args":[{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytesize)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Copies bytes to a **readonly** SecureBuffer.\nOptionally erases bytes after copying if erase is set\nReturns a **readonly** SecureBuffer.","summary":"<p>Copies bytes to a <strong>readonly</strong> SecureBuffer.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":51,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L51"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"+(*args,**options)-instance-method","html_id":"+(*args,**options)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"+","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.+(*args, **options)"}},{"id":"+(*args,**options,&)-instance-method","html_id":"+(*args,**options,&)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"+","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.+(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"==(other:Bytes)-instance-method","html_id":"==(other:Bytes)-instance-method","name":"==","doc":"Timing safe memory compare.","summary":"<p>Timing safe memory compare.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"args_string":"(other : Bytes)","args_html":"(other : Bytes)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":176,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L176"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Sodium.memcmp(self.to_slice, other)"}},{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Timing safe memory compare.","summary":"<p>Timing safe memory compare.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":171,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L171"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Sodium.memcmp(self.to_slice, other.to_slice)"}},{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args, **options]"}},{"id":"[](*args,**options,&)-instance-method","html_id":"[](*args,**options,&)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"[]=(*args,**options)-instance-method","html_id":"[]=(*args,**options)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args] = **options"}},{"id":"bytesize:Int32-instance-method","html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/sodium/secure_buffer.cr","line_number":32,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L32"},"def":{"name":"bytesize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytesize"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"WARNING: Not thread safe unless this object is readonly or readwrite","summary":"<p>WARNING: Not thread safe unless this object is readonly or readwrite</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":111,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L111"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(self)"}},{"id":"hexstring(*args,**options,&)-instance-method","html_id":"hexstring(*args,**options,&)-instance-method","name":"hexstring","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"hexstring","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.hexstring(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"hexstring(*args,**options)-instance-method","html_id":"hexstring(*args,**options)-instance-method","name":"hexstring","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":34,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L34"},"def":{"name":"hexstring","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.hexstring(*args, **options)"}},{"id":"noaccess-instance-method","html_id":"noaccess-instance-method","name":"noaccess","doc":"Makes a region allocated using sodium_malloc() or sodium_allocarray() inaccessible. It cannot be read or written, but the data are preserved.\nWARNING: Not thread safe","summary":"<p>Makes a region allocated using sodium_malloc() or sodium_allocarray() inaccessible.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":133,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L133"},"def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nnoaccess!\n@state = State::Noaccess\nself\n"}},{"id":"readonly(&)-instance-method","html_id":"readonly(&)-instance-method","name":"readonly","doc":"Temporarily make buffer readonly within the block returning to the prior state on exit.\nWARNING: Not thread safe unless this object is readonly or readwrite","summary":"<p>Temporarily make buffer readonly within the block returning to the prior state on exit.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":117,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L117"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"with_state(State::Readonly) do\n  yield\nend"}},{"id":"readonly-instance-method","html_id":"readonly-instance-method","name":"readonly","doc":"Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.\nWARNING: Not thread safe","summary":"<p>Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":150,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L150"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nif (LibSodium.sodium_mprotect_readonly(@ptr)) != 0\n  raise(\"sodium_mprotect_readonly\")\nend\n@state = State::Readonly\nself\n"}},{"id":"readwrite(&)-instance-method","html_id":"readwrite(&)-instance-method","name":"readwrite","doc":"Temporarily make buffer readwrite within the block returning to the prior state on exit.\nWARNING: Not thread safe unless this object is **readwrite**","summary":"<p>Temporarily make buffer readwrite within the block returning to the prior state on exit.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":125,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L125"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"with_state(State::Readwrite) do\n  yield\nend"}},{"id":"readwrite-instance-method","html_id":"readwrite-instance-method","name":"readwrite","doc":"Marks a region allocated using sodium_malloc() or sodium_allocarray() as readable and writable, after having been protected using sodium_mprotect_readonly() or sodium_mprotect_noaccess().\nWARNING: Not thread safe","summary":"<p>Marks a region allocated using sodium_malloc() or sodium_allocarray() as readable and writable, after having been protected using sodium_mprotect_readonly() or sodium_mprotect_noaccess().</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":161,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L161"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nif (LibSodium.sodium_mprotect_readwrite(@ptr)) != 0\n  raise(\"sodium_mprotect_readwrite\")\nend\n@state = State::Readwrite\nself\n"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key\nMay permanently set key to readonly depending on class usage.\nWARNING: Not thread safe unless this object is readonly or readwrite","summary":"<p>Returns key May permanently set key to readonly depending on class usage.</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/secure_buffer.cr","line_number":96,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L96"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"case @state\nwhen State::Noaccess, State::Wiped\n  readonly\nelse\nend\nSlice(UInt8).new(@ptr, @bytesize)\n"}},{"id":"to_unsafe:Pointer(UInt8)-instance-method","html_id":"to_unsafe:Pointer(UInt8)-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Pointer(UInt8)","args_html":" : Pointer(UInt8)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":106,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L106"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ptr"}},{"id":"wipe-instance-method","html_id":"wipe-instance-method","name":"wipe","doc":"WARNING: Not thread safe","summary":"<p>WARNING: Not thread safe</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":73,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L73"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == State::Wiped\n  return\nend\nreadwrite\nSodium.memzero(self.to_slice)\n@state = State::Wiped\nnoaccess!\n"}},{"id":"wipe(&)-instance-method","html_id":"wipe(&)-instance-method","name":"wipe","doc":"WARNING: Not thread safe","summary":"<p>WARNING: Not thread safe</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/sodium/secure_buffer.cr","line_number":82,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L82"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nensure\n  wipe\nend"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/SecureBuffer/Error","path":"Sodium/SecureBuffer/Error.html","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error","abstract":false,"superclass":{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":10,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L10"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"sodium/Sodium/SecureBuffer/Error/InvalidStateTransition","kind":"class","full_name":"Sodium::SecureBuffer::Error::InvalidStateTransition","name":"InvalidStateTransition"},{"html_id":"sodium/Sodium/SecureBuffer/Error/KeyWiped","kind":"class","full_name":"Sodium::SecureBuffer::Error::KeyWiped","name":"KeyWiped"},{"html_id":"sodium/Sodium/SecureBuffer/Error/OutOfMemory","kind":"class","full_name":"Sodium::SecureBuffer::Error::OutOfMemory","name":"OutOfMemory"}],"including_types":[],"namespace":{"html_id":"sodium/Sodium/SecureBuffer","kind":"class","full_name":"Sodium::SecureBuffer","name":"SecureBuffer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/SecureBuffer/Error/InvalidStateTransition","path":"Sodium/SecureBuffer/Error/InvalidStateTransition.html","kind":"class","full_name":"Sodium::SecureBuffer::Error::InvalidStateTransition","name":"InvalidStateTransition","abstract":false,"superclass":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":14,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L14"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"sodium/Sodium/SecureBuffer/Error/KeyWiped","path":"Sodium/SecureBuffer/Error/KeyWiped.html","kind":"class","full_name":"Sodium::SecureBuffer::Error::KeyWiped","name":"KeyWiped","abstract":false,"superclass":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L11"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"sodium/Sodium/SecureBuffer/Error/OutOfMemory","path":"Sodium/SecureBuffer/Error/OutOfMemory.html","kind":"class","full_name":"Sodium::SecureBuffer::Error::OutOfMemory","name":"OutOfMemory","abstract":false,"superclass":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"ancestors":[{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},{"html_id":"sodium/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"sodium/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L18"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/SecureBuffer/Error","kind":"class","full_name":"Sodium::SecureBuffer::Error","name":"Error"},"doc":"Check RLIMIT_MEMLOCK if you receive this","summary":"<p>Check RLIMIT_MEMLOCK if you receive this</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/SecureBuffer/State","path":"Sodium/SecureBuffer/State.html","kind":"enum","full_name":"Sodium::SecureBuffer::State","name":"State","abstract":false,"superclass":null,"ancestors":[{"html_id":"sodium/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"sodium/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"sodium/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/secure_buffer.cr","line_number":22,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L22"}],"repository_name":"sodium","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Cloning","name":"Cloning","value":"0","doc":null,"summary":null},{"id":"Wiped","name":"Wiped","value":"1","doc":null,"summary":null},{"id":"Noaccess","name":"Noaccess","value":"2","doc":null,"summary":null},{"id":"Readonly","name":"Readonly","value":"3","doc":null,"summary":null},{"id":"Readwrite","name":"Readwrite","value":"4","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/SecureBuffer","kind":"class","full_name":"Sodium::SecureBuffer","name":"SecureBuffer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cloning?-instance-method","html_id":"cloning?-instance-method","name":"cloning?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":23,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L23"},"def":{"name":"cloning?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cloning"}},{"id":"noaccess?-instance-method","html_id":"noaccess?-instance-method","name":"noaccess?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":25,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L25"},"def":{"name":"noaccess?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Noaccess"}},{"id":"readonly?-instance-method","html_id":"readonly?-instance-method","name":"readonly?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":26,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L26"},"def":{"name":"readonly?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Readonly"}},{"id":"readwrite?-instance-method","html_id":"readwrite?-instance-method","name":"readwrite?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":27,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L27"},"def":{"name":"readwrite?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Readwrite"}},{"id":"wiped?-instance-method","html_id":"wiped?-instance-method","name":"wiped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/secure_buffer.cr","line_number":24,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/secure_buffer.cr#L24"},"def":{"name":"wiped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Wiped"}}],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Sign","path":"Sodium/Sign.html","kind":"module","full_name":"Sodium::Sign","name":"Sign","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/sign/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L4"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"sodium/Sodium/Sign/PublicKey","path":"Sodium/Sign/PublicKey.html","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey","abstract":false,"superclass":{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/sign/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L4"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_sign_publickeybytes.to_i","doc":null,"summary":null},{"id":"SIG_SIZE","name":"SIG_SIZE","value":"LibSodium.crypto_sign_bytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Sign","kind":"module","full_name":"Sodium::Sign","name":"Sign"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/sodium/sign/public_key.cr","line_number":17,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L17"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_curve25519:CryptoBox::PublicKey-instance-method","html_id":"to_curve25519:CryptoBox::PublicKey-instance-method","name":"to_curve25519","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : CryptoBox::PublicKey","args_html":" : <a href=\"../../Sodium/CryptoBox/PublicKey.html\">CryptoBox::PublicKey</a>","location":{"filename":"src/sodium/sign/public_key.cr","line_number":38,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L38"},"def":{"name":"to_curve25519","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox::PublicKey","visibility":"Public","body":"pk = CryptoBox::PublicKey.new\nLibSodium.crypto_sign_ed25519_pk_to_curve25519(pk.to_slice, @bytes)\npk\n"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/sign/public_key.cr","line_number":9,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L9"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@bytes.to_slice"}},{"id":"verify_detached(message:Bytes,sig:Bytes)-instance-method","html_id":"verify_detached(message:Bytes,sig:Bytes)-instance-method","name":"verify_detached","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"args_string":"(message : Bytes, sig : Bytes)","args_html":"(message : Bytes, sig : Bytes)","location":{"filename":"src/sodium/sign/public_key.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L29"},"def":{"name":"verify_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sig.bytesize != SIG_SIZE\n  raise(ArgumentError.new(\"Signature must be #{SIG_SIZE} bytes, got #{sig.bytesize}\"))\nend\nv = LibSodium.crypto_sign_verify_detached(sig, message, message.bytesize, @bytes)\nif v != 0\n  raise(Sodium::Error::VerificationFailed.new(\"crypto_sign_verify_detached\"))\nend\n"}},{"id":"verify_detached(message,sig:Bytes)-instance-method","html_id":"verify_detached(message,sig:Bytes)-instance-method","name":"verify_detached","doc":"Verify signature made by `secret_key.sign_detached(message)`\nRaises on verification failure.","summary":"<p>Verify signature made by <code>secret_key.sign_detached(message)</code> Raises on verification failure.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"args_string":"(message, sig : Bytes)","args_html":"(message, sig : Bytes)","location":{"filename":"src/sodium/sign/public_key.cr","line_number":25,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L25"},"def":{"name":"verify_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"verify_detached(message.to_slice, sig)"}}],"macros":[],"types":[{"html_id":"sodium/Sodium/Sign/PublicKey/SerializeConverter","path":"Sodium/Sign/PublicKey/SerializeConverter.html","kind":"module","full_name":"Sodium::Sign::PublicKey::SerializeConverter","name":"SerializeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/sodium/sign/public_key.cr","line_number":44,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L44"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Sign/PublicKey","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey"},"doc":null,"summary":null,"class_methods":[{"id":"from_json(value:JSON::PullParser):PublicKey-class-method","html_id":"from_json(value:JSON::PullParser):PublicKey-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"args_string":"(value : JSON::PullParser) : PublicKey","args_html":"(value : JSON::PullParser) : <a href=\"../../../Sodium/Sign/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/sign/public_key.cr","line_number":49,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L49"},"def":{"name":"from_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"PublicKey.new(Base64.decode(value.read_string))"}},{"id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : PublicKey","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : <a href=\"../../../Sodium/Sign/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/sign/public_key.cr","line_number":57,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L57"},"def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.class}\")\nend\nPublicKey.new(Base64.decode(node.value))\n"}},{"id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","html_id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : PublicKey, json : JSON::Builder)","args_html":"(value : <a href=\"../../../Sodium/Sign/PublicKey.html\">PublicKey</a>, json : JSON::Builder)","location":{"filename":"src/sodium/sign/public_key.cr","line_number":45,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L45"},"def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value.to_slice))"}},{"id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","html_id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : PublicKey, yaml : YAML::Nodes::Builder)","args_html":"(value : <a href=\"../../../Sodium/Sign/PublicKey.html\">PublicKey</a>, yaml : YAML::Nodes::Builder)","location":{"filename":"src/sodium/sign/public_key.cr","line_number":53,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/public_key.cr#L53"},"def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(Base64.strict_encode(value.to_slice))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"sodium/Sodium/Sign/SecretKey","path":"Sodium/Sign/SecretKey.html","kind":"class","full_name":"Sodium::Sign::SecretKey","name":"SecretKey","abstract":false,"superclass":{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"sodium/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"sodium/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"sodium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"sodium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sodium/sign/secret_key.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L16"}],"repository_name":"sodium","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_sign_secretkeybytes.to_i","doc":null,"summary":null},{"id":"SEED_SIZE","name":"SEED_SIZE","value":"LibSodium.crypto_sign_seedbytes.to_i","doc":null,"summary":null},{"id":"SIG_SIZE","name":"SIG_SIZE","value":"LibSodium.crypto_sign_bytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"sodium/Sodium/Sign","kind":"module","full_name":"Sodium::Sign","name":"Sign"},"doc":"Ed25519 secret key used for signing.\n\n[https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n\nUsage:\n```\nkey = Sodium::Sign::SecretKey.new\nsig = key.sign_detached data\nkey.public_key.verify_detached data, sig\n```","summary":"<p>Ed25519 secret key used for signing.</p>","class_methods":[],"constructors":[{"id":"new(bytes:Bytes,pkey:Bytes?=nil,*,erase=false)-class-method","html_id":"new(bytes:Bytes,pkey:Bytes?=nil,*,erase=false)-class-method","name":"new","doc":"Use existing secret and public keys.\nCopies secret key to a SecureBuffer.\nRecomputes the public key from a secret key if missing.","summary":"<p>Use existing secret and public keys.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>, *, erase = <span class=\"n\">false</span>)","args_html":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>, *, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":38,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L38"},"def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, pkey, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generates a new random secret/public key pair.","summary":"<p>Generates a new random secret/public key pair.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":27,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L27"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:Bytes,erase=false)-class-method","html_id":"new(*,seed:Bytes,erase=false)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.\nCopies seed to a SecureBuffer.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","args_html":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":54,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L54"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:SecureBuffer)-class-method","html_id":"new(*,seed:SecureBuffer)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"args_string":"(*, seed : SecureBuffer)","args_html":"(*, seed : <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>)","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":60,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L60"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"public_key:PublicKey-instance-method","html_id":"public_key:PublicKey-instance-method","name":"public_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PublicKey","args_html":" : <a href=\"../../Sodium/Sign/PublicKey.html\">PublicKey</a>","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":21,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L21"},"def":{"name":"public_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"@public_key"}},{"id":"seed:SecureBuffer?-instance-method","html_id":"seed:SecureBuffer?-instance-method","name":"seed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SecureBuffer?","args_html":" : <a href=\"../../Sodium/SecureBuffer.html\">SecureBuffer</a>?","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":71,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L71"},"def":{"name":"seed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer | ::Nil","visibility":"Public","body":"if (value = @seed).nil?\n  @seed = ((SecureBuffer.new(SEED_SIZE)).tap do |s|\n    if (LibSodium.crypto_sign_ed25519_sk_to_seed(s.to_slice, self.to_slice)) != 0\n      raise(Sodium::Error.new(\"crypto_sign_ed25519_sk_to_seed\"))\n    end\n  end.readonly)\nelse\n  value\nend"}},{"id":"sign_detached(message:Bytes)-instance-method","html_id":"sign_detached(message:Bytes)-instance-method","name":"sign_detached","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"}],"args_string":"(message : Bytes)","args_html":"(message : Bytes)","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":85,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L85"},"def":{"name":"sign_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sig = Bytes.new(SIG_SIZE)\nif (LibSodium.crypto_sign_detached(sig, out sig_len, message, message.bytesize, self.to_slice)) != 0\n  raise(Error.new(\"crypto_sign_detached\"))\nend\nsig\n"}},{"id":"sign_detached(message)-instance-method","html_id":"sign_detached(message)-instance-method","name":"sign_detached","doc":"Signs message and returns a detached signature.\nVerify using `secret_key.public_key.verify_detached(message, sig)`","summary":"<p>Signs message and returns a detached signature.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","args_html":"(message)","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":81,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L81"},"def":{"name":"sign_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sign_detached(message.to_slice)"}},{"id":"to_curve25519:CryptoBox::SecretKey-instance-method","html_id":"to_curve25519:CryptoBox::SecretKey-instance-method","name":"to_curve25519","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : CryptoBox::SecretKey","args_html":" : <a href=\"../../Sodium/CryptoBox/SecretKey.html\">CryptoBox::SecretKey</a>","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":93,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L93"},"def":{"name":"to_curve25519","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox::SecretKey","visibility":"Public","body":"key = SecureBuffer.new(CryptoBox::SecretKey::KEY_SIZE)\nLibSodium.crypto_sign_ed25519_sk_to_curve25519(key.to_slice, @sbuf.to_slice)\nkey.readonly\nCryptoBox::SecretKey.new(key)\n"}},{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/sodium/sign/secret_key.cr","line_number":24,"url":"https://github.com/didactic-drunk/sodium.cr/blob/c9e40da973030a2e1f89f04fd1697ffd59f1b91e/src/sodium/sign/secret_key.cr#L24"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@sbuf.to_slice"}}],"macros":[],"types":[]}]}]}]}})